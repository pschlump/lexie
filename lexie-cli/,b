go build
./lexie-cli -l ../in/django3.lex -X match,db_DumpDFAPool,db_DumpPool,db_Matcher_02,db_NFA_LnNo,DumpParseNodes2,db_FlushTokenBeforeAfter -i ./autoescape.tpl
Defs - OutputDef
==========================================================================
DefType: Machines
==========================================================================
    S_Common=1
    S_Esc=8
    S_Init=0
    S_Quote=4
    S_Str0=5
    S_Str1=6
    S_Str2=7
    S_TAG=2
    S_VAR=3
==========================================================================
DefType: Errors
==========================================================================
    Err_EOF_In_String=1
    Err_EOF_Tag=2
    Warn_End_Var_Unexpected=3
    Warn_Unrecog_Char=4
==========================================================================
DefType: ReservedWords
==========================================================================
    and=Tok_L_AND
    as=Tok_as
    export=Tok_export
    false=Tok_false
    in=Tok_in
    not=Tok_not
    or=Tok_L_OR
    true=Tok_true
==========================================================================
DefType: Tokens
==========================================================================
    Tok_CARRET=20
    Tok_CL=13
    Tok_CL_BL=9
    Tok_CL_VAR=7
    Tok_COLON=25
    Tok_COMMA=21
    Tok_Call=36
    Tok_DOT=22
    Tok_EOF=37
    Tok_EQ=26
    Tok_EXCLAM=23
    Tok_GE=2
    Tok_GT=18
    Tok_HTML=38
    Tok_ID=39
    Tok_Ignore=40
    Tok_LE=3
    Tok_LT=17
    Tok_L_AND=4
    Tok_L_EQ=1
    Tok_L_OR=5
    Tok_MINUS=15
    Tok_NE=10
    Tok_NE_LG=11
    Tok_NUM=41
    Tok_OP=12
    Tok_OP_BL=8
    Tok_OP_VAR=6
    Tok_OR=24
    Tok_PCT=27
    Tok_PLUS=14
    Tok_SLASH=19
    Tok_SS=42
    Tok_STAR=16
    Tok_Str0=43
    Tok_Str1=44
    Tok_and=29
    Tok_as=34
    Tok_export=35
    Tok_false=33
    Tok_in=28
    Tok_not=31
    Tok_null=0
    Tok_or=30
    Tok_true=32
Machine[0] Name[S_Init]-----------------------------------------------------------------
    Mixins: []
        0: Pat   \\{\\{                          Rv:6=Tok_OP_VAR     Call:3=S_VAR       
        1: Pat   \\{%                            Rv:8=Tok_OP_BL      Call:2=S_TAG       
        2: Pat   \\{\\\\{                                                                Repl:`{{` 
        3: Pat   \\{\\%                                                                  Repl:`{%` 
        4: Pat   .*                              Rv:38=Tok_HTML                         
        5: EOF                                   Rv:37=Tok_EOF                          
Machine[1] Name[S_Common]-----------------------------------------------------------------
    Mixins: []
        0: Pat   <=                              Rv:3=Tok_LE                            
        1: Pat   ==                              Rv:1=Tok_L_EQ                          
        2: Pat   >=                              Rv:2=Tok_GE                            
        3: Pat   &&                              Rv:4=Tok_L_AND                         
        4: Pat   \\|\\|                          Rv:5=Tok_L_OR                          
        5: Pat   !=                              Rv:10=Tok_NE                           
        6: Pat   <>                              Rv:10=Tok_NE                           
        7: Pat   \\{\\{                          Rv:6=Tok_OP_VAR     Call:3=S_VAR       
        8: Pat   \\{%                            Rv:8=Tok_OP_BL      Call:2=S_TAG       
        9: Pat   %\\}                            Rv:9=Tok_CL_BL                          Return 
       10: Pat   \\}\\}                          Rv:7=Tok_CL_VAR                         Return 
       11: Pat   [a-zA-Z_][a-zA-Z0-9_]*          Rv:39=Tok_ID                            [ReservedWord] 
       12: Pat   [0-9]+                          Rv:41=Tok_NUM                          
       13: Pat   \"                              Rv:40=Tok_Ignore    Call:5=S_Str0       [Ignore] 
       14: Pat   '                               Rv:40=Tok_Ignore    Call:6=S_Str1       [Ignore] 
       15: Pat   `                               Rv:40=Tok_Ignore    Call:7=S_Str2       [Ignore] 
       16: Pat   \\^                             Rv:20=Tok_CARRET                       
       17: Pat   (                               Rv:12=Tok_OP                           
       18: Pat   )                               Rv:13=Tok_CL                           
       19: Pat   \\+                             Rv:14=Tok_PLUS                         
       20: Pat   -                               Rv:15=Tok_MINUS                        
       21: Pat   \\*                             Rv:16=Tok_STAR                         
       22: Pat   <                               Rv:17=Tok_LT                           
       23: Pat   >                               Rv:18=Tok_GT                           
       24: Pat   /                               Rv:19=Tok_SLASH                        
       25: Pat   %                               Rv:27=Tok_PCT                          
       26: Pat   \\|                             Rv:24=Tok_OR                           
       27: Pat   ,                               Rv:21=Tok_COMMA                        
       28: Pat   \\.                             Rv:22=Tok_DOT                          
       29: Pat   !                               Rv:23=Tok_EXCLAM                       
       30: Pat   :                               Rv:25=Tok_COLON                        
       31: Pat   =                               Rv:26=Tok_EQ                           
       32: Pat   [ \t\n\f\r]                     Rv:40=Tok_Ignore                        [Ignore] 
       33: Pat   .                                                                       Return  [Warn=Warn_Unrecog_Char] 
       34: EOF                                                                           [Err=Err_EOF_Tag] 
Machine[2] Name[S_TAG]-----------------------------------------------------------------
    Mixins: [S_Common]
        0: Pat   <=                              Rv:3=Tok_LE                            
        1: Pat   ==                              Rv:1=Tok_L_EQ                          
        2: Pat   >=                              Rv:2=Tok_GE                            
        3: Pat   &&                              Rv:4=Tok_L_AND                         
        4: Pat   \\|\\|                          Rv:5=Tok_L_OR                          
        5: Pat   !=                              Rv:10=Tok_NE                           
        6: Pat   <>                              Rv:10=Tok_NE                           
        7: Pat   \\{\\{                          Rv:6=Tok_OP_VAR     Call:3=S_VAR       
        8: Pat   \\{%                            Rv:8=Tok_OP_BL      Call:2=S_TAG       
        9: Pat   %\\}                            Rv:9=Tok_CL_BL                          Return 
       10: Pat   \\}\\}                          Rv:7=Tok_CL_VAR                         Return 
       11: Pat   [a-zA-Z_][a-zA-Z0-9_]*          Rv:39=Tok_ID                            [ReservedWord] 
       12: Pat   [0-9]+                          Rv:41=Tok_NUM                          
       13: Pat   \"                              Rv:40=Tok_Ignore    Call:5=S_Str0       [Ignore] 
       14: Pat   '                               Rv:40=Tok_Ignore    Call:6=S_Str1       [Ignore] 
       15: Pat   `                               Rv:40=Tok_Ignore    Call:7=S_Str2       [Ignore] 
       16: Pat   \\^                             Rv:20=Tok_CARRET                       
       17: Pat   (                               Rv:12=Tok_OP                           
       18: Pat   )                               Rv:13=Tok_CL                           
       19: Pat   \\+                             Rv:14=Tok_PLUS                         
       20: Pat   -                               Rv:15=Tok_MINUS                        
       21: Pat   \\*                             Rv:16=Tok_STAR                         
       22: Pat   <                               Rv:17=Tok_LT                           
       23: Pat   >                               Rv:18=Tok_GT                           
       24: Pat   /                               Rv:19=Tok_SLASH                        
       25: Pat   %                               Rv:27=Tok_PCT                          
       26: Pat   \\|                             Rv:24=Tok_OR                           
       27: Pat   ,                               Rv:21=Tok_COMMA                        
       28: Pat   \\.                             Rv:22=Tok_DOT                          
       29: Pat   !                               Rv:23=Tok_EXCLAM                       
       30: Pat   :                               Rv:25=Tok_COLON                        
       31: Pat   =                               Rv:26=Tok_EQ                           
       32: Pat   [ \t\n\f\r]                     Rv:40=Tok_Ignore                        [Ignore] 
       33: Pat   .                                                                       Return  [Warn=Warn_Unrecog_Char] 
       34: EOF                                                                           [Err=Err_EOF_Tag] 
Machine[3] Name[S_VAR]-----------------------------------------------------------------
    Mixins: [S_Common]
        0: Pat   <=                              Rv:3=Tok_LE                            
        1: Pat   ==                              Rv:1=Tok_L_EQ                          
        2: Pat   >=                              Rv:2=Tok_GE                            
        3: Pat   &&                              Rv:4=Tok_L_AND                         
        4: Pat   \\|\\|                          Rv:5=Tok_L_OR                          
        5: Pat   !=                              Rv:10=Tok_NE                           
        6: Pat   <>                              Rv:10=Tok_NE                           
        7: Pat   \\{\\{                          Rv:6=Tok_OP_VAR     Call:3=S_VAR       
        8: Pat   \\{%                            Rv:8=Tok_OP_BL      Call:2=S_TAG       
        9: Pat   %\\}                            Rv:9=Tok_CL_BL                          Return 
       10: Pat   \\}\\}                          Rv:7=Tok_CL_VAR                         Return 
       11: Pat   [a-zA-Z_][a-zA-Z0-9_]*          Rv:39=Tok_ID                            [ReservedWord] 
       12: Pat   [0-9]+                          Rv:41=Tok_NUM                          
       13: Pat   \"                              Rv:40=Tok_Ignore    Call:5=S_Str0       [Ignore] 
       14: Pat   '                               Rv:40=Tok_Ignore    Call:6=S_Str1       [Ignore] 
       15: Pat   `                               Rv:40=Tok_Ignore    Call:7=S_Str2       [Ignore] 
       16: Pat   \\^                             Rv:20=Tok_CARRET                       
       17: Pat   (                               Rv:12=Tok_OP                           
       18: Pat   )                               Rv:13=Tok_CL                           
       19: Pat   \\+                             Rv:14=Tok_PLUS                         
       20: Pat   -                               Rv:15=Tok_MINUS                        
       21: Pat   \\*                             Rv:16=Tok_STAR                         
       22: Pat   <                               Rv:17=Tok_LT                           
       23: Pat   >                               Rv:18=Tok_GT                           
       24: Pat   /                               Rv:19=Tok_SLASH                        
       25: Pat   %                               Rv:27=Tok_PCT                          
       26: Pat   \\|                             Rv:24=Tok_OR                           
       27: Pat   ,                               Rv:21=Tok_COMMA                        
       28: Pat   \\.                             Rv:22=Tok_DOT                          
       29: Pat   !                               Rv:23=Tok_EXCLAM                       
       30: Pat   :                               Rv:25=Tok_COLON                        
       31: Pat   =                               Rv:26=Tok_EQ                           
       32: Pat   [ \t\n\f\r]                     Rv:40=Tok_Ignore                        [Ignore] 
       33: Pat   .                                                                       Return  [Warn=Warn_Unrecog_Char] 
       34: EOF                                                                           [Err=Err_EOF_Tag] 
Machine[4] Name[S_Quote]-----------------------------------------------------------------
    Mixins: []
        0: Pat   .                                                                       Return 
        1: EOF                                                                           [Err=Err_EOF_In_String] 
Machine[5] Name[S_Str0]-----------------------------------------------------------------
    Mixins: []
        0: Pat   \\                              Rv:36=Tok_Call      Call:4=S_Quote     
        1: Pat   .*\"                            Rv:43=Tok_Str0                          Return 
        2: EOF                                                                           [Err=Err_EOF_In_String] 
Machine[6] Name[S_Str1]-----------------------------------------------------------------
    Mixins: []
        0: Pat   \\                              Rv:36=Tok_Call      Call:4=S_Quote     
        1: Pat   .*'                             Rv:44=Tok_Str1                          Return 
        2: EOF                                                                           [Err=Err_EOF_In_String] 
Machine[7] Name[S_Str2]-----------------------------------------------------------------
    Mixins: []
        0: Pat   ``                                                                      Repl:"`" 
        1: Pat   .*`                             Rv:43=Tok_Str0                         
        2: EOF                                                                           [Err=Err_EOF_In_String] 
M= ->\{\{<- Adding at  0 RE: \{\{                           (Rv: 6, final=   6), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\{\\{",
	"Pos": 4,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "{"
}

DumpParseNodes: As Passed [
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\{%<- Adding at  1 RE: \{%                            (Rv: 8, final=   8), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\{%",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "%",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "%{"
}

DumpParseNodes: As Passed [
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "%",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

###################################### ww.Replace: ii=0 jj=2 ->`{{`<-, File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:495
M= ->\{\\{<- Adding at  2 RE: \{\\{                          (Rv: 0, final=9900), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
Error: EOF found in Iterator {m,n}.
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\{\\\\{",
	"Pos": 5,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 1,
				"LR_Tok": 16,
				"Children": [
					{
						"Item": "\\",
						"Mm": 0,
						"Nn": 0,
						"LR_Tok": 1,
						"Children": null
					}
				]
			}
		]
	},
	"Error": [
		{}
	],
	"Sigma": "{"
}

DumpParseNodes: As Passed [
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 1,
		"LR_Tok": 16,
		"Children": [
			{
				"Item": "\\",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	}
]

###################################### ww.Replace: ii=0 jj=3 ->`{%`<-, File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:495
M= ->\{\%<- Adding at  3 RE: \{\%                           (Rv: 0, final=9900), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\{\\%",
	"Pos": 4,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "\\",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "%",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "%\\{"
}

DumpParseNodes: As Passed [
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "\\",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "%",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->.*<- Adding at  4 RE: .*                             (Rv:38, final=  38), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ".*",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "*",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 4,
				"Children": [
					{
						"Item": ".",
						"Mm": 0,
						"Nn": 0,
						"LR_Tok": 3,
						"Children": null
					}
				]
			}
		]
	},
	"Error": null,
	"Sigma": "."
}

DumpParseNodes: As Passed [
	{
		"Item": "*",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 4,
		"Children": [
			{
				"Item": ".",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 3,
				"Children": null
			}
		]
	}
]

ADDING AT  5 RE: <M_EOF>                        (Rv:37, final=  37), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:498
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

BuildDFA_2: Nfa.Sigma Before Finialize-><-
NFA for (Before Finialize) ->S_Init<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:         	 E:{ "{"   0 ->  1  [257]}  { "{"   0 ->  3  [257]}  { "{"   0 ->  5  [257]}  { "{"   0 ->  7  [257]}  { DOT/uF8FA   0 -> 10  [292]}  {  λ   0 -> 10  [318]}  { EOF/uF8FB   0 -> 12  [257]}  

  1[256]:         	 E:{ "{"   1 ->  2  [257]}  

  2[256]:  T:0006 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:3, MatchLength:2 ReplStr:-><-, PositionNumber:1


  3[256]:         	 E:{ "%"   3 ->  4  [257]}  

  4[256]:  T:0008 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:2, MatchLength:2 ReplStr:-><-, PositionNumber:2


  5[256]:         	 E:{ "\\"   5 ->  6  [257]}  {  λ   5 ->  6  [351]}  

  6[256]:  T:9900 	 E:			NFA.Info: Action: (01) A_Repl(01), Ns:0, MatchLength:1 ReplStr:->`{{`<-, PositionNumber:3


  7[256]:         	 E:{ "\\"   7 ->  8  [257]}  

  8[256]:         	 E:{ "%"   8 ->  9  [257]}  

  9[256]:  T:9900 	 E:			NFA.Info: Action: (01) A_Repl(01), Ns:0, MatchLength:3 ReplStr:->`{%`<-, PositionNumber:4


 10[280]:         	 E:{  λ  10 ->  0  [319]}  {  λ  10 -> 11  [321]}  

 11[320]:  T:0038 	 E:

 12[256]:  T:0037 	 E:			NFA.Info: Action: (02) A_EOF(02), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:6


BuildDFA_2: Nfa.Sigma ->%\{<-
Final NFA for ->S_Init<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:         	 E:{ "{"   0 ->  1  [257]}  { "{"   0 ->  3  [257]}  { "{"   0 ->  5  [257]}  { "{"   0 ->  7  [257]}  { DOT/uF8FA   0 -> 10  [292]}  {  λ   0 -> 10  [318]}  { EOF/uF8FB   0 -> 12  [257]}  { "%"   0 -> 10  [468]}  { "\\"   0 -> 10  [468]}  { "{"   0 -> 10  [468]}  { EOF/uF8FB   0 -> 10  [468]}  

  1[256]:         	 E:{ "{"   1 ->  2  [257]}  

  2[256]:  T:0006 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:3, MatchLength:2 ReplStr:-><-, PositionNumber:1


  3[256]:         	 E:{ "%"   3 ->  4  [257]}  

  4[256]:  T:0008 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:2, MatchLength:2 ReplStr:-><-, PositionNumber:2


  5[256]:         	 E:{ "\\"   5 ->  6  [257]}  {  λ   5 ->  6  [351]}  

  6[256]:  T:9900 	 E:			NFA.Info: Action: (01) A_Repl(01), Ns:0, MatchLength:1 ReplStr:->`{{`<-, PositionNumber:3


  7[256]:         	 E:{ "\\"   7 ->  8  [257]}  

  8[256]:         	 E:{ "%"   8 ->  9  [257]}  

  9[256]:  T:9900 	 E:			NFA.Info: Action: (01) A_Repl(01), Ns:0, MatchLength:3 ReplStr:->`{%`<-, PositionNumber:4


 10[280]:         	 E:{  λ  10 ->  0  [319]}  {  λ  10 -> 11  [321]}  

 11[320]:  T:0038 	 E:

 12[256]:  T:0037 	 E:			NFA.Info: Action: (02) A_EOF(02), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:6


Final DFA for ->S_Init<-

---------------------------- DFA Output -----------------------------------------------

DFA InitState: 0, Sigma ->%\{<-

 St:     StateName     StateSet ✔              	Edges

  0:       0-10-11    [0,10,11] ✔ : T:0038 	 E:{ "%"   0 ->  0  }  { "\\"   0 ->  0  }  { "{"   0 ->  1  }  { DOT/uF8FA   0 ->  0  }  { EOF/uF8FB   0 ->  2  }  

  1:  0-1-3-5-6-7-10-11 [0,1,3,5,6,7,10,11] ✔ : T:9900 	 E:{ "%"   1 ->  3  }  { "\\"   1 ->  4  }  { "{"   1 ->  5  }  { DOT/uF8FA   1 ->  0  }  { EOF/uF8FB   1 ->  2  }  
			DFA.Info: Action: (01) A_Repl(01), Ns:0, MatchLength:1 ReplStr:->`{{`<-

  2:    0-10-11-12 [0,10,11,12] ✔ : T:0038 	 E:{ "%"   2 ->  0  }  { "\\"   2 ->  0  }  { "{"   2 ->  1  }  { DOT/uF8FA   2 ->  0  }  { EOF/uF8FB   2 ->  2  }  

  3:     0-4-10-11  [0,4,10,11] ✔ : T:0008 	 E:{ "%"   3 ->  0  }  { "\\"   3 ->  0  }  { "{"   3 ->  1  }  { DOT/uF8FA   3 ->  0  }  { EOF/uF8FB   3 ->  2  }  
			DFA.Info: Action: (04) A_Push(04), Ns:2, MatchLength:2 ReplStr:-><-

  4:   0-6-8-10-11 [0,6,8,10,11] ✔ : T:9900 	 E:{ "%"   4 ->  6  }  { "\\"   4 ->  0  }  { "{"   4 ->  1  }  { DOT/uF8FA   4 ->  0  }  { EOF/uF8FB   4 ->  2  }  
			DFA.Info: Action: (01) A_Repl(01), Ns:0, MatchLength:1 ReplStr:->`{{`<-

  5:  0-1-2-3-5-6-7-10-11 [0,1,2,3,5,6,7,10,11] ✔ : T:0006 	 E:{ "%"   5 ->  3  }  { "\\"   5 ->  4  }  { "{"   5 ->  5  }  { DOT/uF8FA   5 ->  0  }  { EOF/uF8FB   5 ->  2  }  
			DFA.Info: Action: (04) A_Push(04), Ns:3, MatchLength:2 ReplStr:-><-

  6:     0-9-10-11  [0,9,10,11] ✔ : T:9900 	 E:{ "%"   6 ->  0  }  { "\\"   6 ->  0  }  { "{"   6 ->  1  }  { DOT/uF8FA   6 ->  0  }  { EOF/uF8FB   6 ->  2  }  
			DFA.Info: Action: (01) A_Repl(01), Ns:0, MatchLength:3 ReplStr:->`{%`<-

M= -><=<- Adding at  0 RE: <=                             (Rv: 3, final=   3), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003c=",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003c",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u003c="
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003c",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->==<- Adding at  1 RE: ==                             (Rv: 1, final=   1), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "==",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "="
}

DumpParseNodes: As Passed [
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->>=<- Adding at  2 RE: >=                             (Rv: 2, final=   2), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003e=",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003e",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "=\u003e"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003e",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->&&<- Adding at  3 RE: &&                             (Rv: 4, final=   4), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u0026\u0026",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u0026",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "\u0026",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u0026"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u0026",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "\u0026",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\|\|<- Adding at  4 RE: \|\|                           (Rv: 5, final=   5), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\|\\|",
	"Pos": 4,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "|",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "|",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "|"
}

DumpParseNodes: As Passed [
	{
		"Item": "|",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "|",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->!=<- Adding at  5 RE: !=                             (Rv:10, final=  10), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "!=",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "!",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "!="
}

DumpParseNodes: As Passed [
	{
		"Item": "!",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= -><><- Adding at  6 RE: <>                             (Rv:10, final=  10), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003c\u003e",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003c",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "\u003e",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u003c\u003e"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003c",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "\u003e",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\{\{<- Adding at  7 RE: \{\{                           (Rv: 6, final=   6), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\{\\{",
	"Pos": 4,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "{"
}

DumpParseNodes: As Passed [
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\{%<- Adding at  8 RE: \{%                            (Rv: 8, final=   8), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\{%",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "%",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "%{"
}

DumpParseNodes: As Passed [
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "%",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->%\}<- Adding at  9 RE: %\}                            (Rv: 9, final=   9), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "%\\}",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "%",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "}",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "%}"
}

DumpParseNodes: As Passed [
	{
		"Item": "%",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "}",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\}\}<- Adding at 10 RE: \}\}                           (Rv: 7, final=   7), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\}\\}",
	"Pos": 4,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "}",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "}",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "}"
}

DumpParseNodes: As Passed [
	{
		"Item": "}",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "}",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->[a-zA-Z_][a-zA-Z0-9_]*<- Adding at 11 RE: [a-zA-Z_][a-zA-Z0-9_]*         (Rv:39, final=  39), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "[a-zA-Z_][a-zA-Z0-9_]*",
	"Pos": 22,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "_",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 9,
				"Children": null
			},
			{
				"Item": "*",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 4,
				"Children": [
					{
						"Item": "_",
						"Mm": 0,
						"Nn": 0,
						"LR_Tok": 9,
						"Children": null
					}
				]
			}
		]
	},
	"Error": null,
	"Sigma": "_"
}

DumpParseNodes: As Passed [
	{
		"Item": "_",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 9,
		"Children": null
	},
	{
		"Item": "*",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 4,
		"Children": [
			{
				"Item": "_",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 9,
				"Children": null
			}
		]
	}
]

M= ->[0-9]+<- Adding at 12 RE: [0-9]+                         (Rv:41, final=  41), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "[0-9]+",
	"Pos": 6,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "+",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 5,
				"Children": [
					{
						"Item": "",
						"Mm": 0,
						"Nn": 0,
						"LR_Tok": 9,
						"Children": null
					}
				]
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "+",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 5,
		"Children": [
			{
				"Item": "",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 9,
				"Children": null
			}
		]
	}
]

M= ->"<- Adding at 13 RE: "                              (Rv:40, final=  40), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\"",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\"",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\""
}

DumpParseNodes: As Passed [
	{
		"Item": "\"",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->'<- Adding at 14 RE: '                              (Rv:40, final=  40), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "'",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "'",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "'"
}

DumpParseNodes: As Passed [
	{
		"Item": "'",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->`<- Adding at 15 RE: `                              (Rv:40, final=  40), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "`",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "`",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "`"
}

DumpParseNodes: As Passed [
	{
		"Item": "`",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\^<- Adding at 16 RE: \^                             (Rv:20, final=  20), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\^",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "^",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "^"
}

DumpParseNodes: As Passed [
	{
		"Item": "^",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->(<- Adding at 17 RE: (                              (Rv:12, final=  12), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "(",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "(",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 7,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "(",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 7,
		"Children": null
	}
]

M= ->)<- Adding at 18 RE: )                              (Rv:13, final=  13), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
Warning: Invalid ')' at not properly nested.   Assuming that this was to match a character.
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ")",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ")",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": [
		{}
	],
	"Sigma": ")"
}

DumpParseNodes: As Passed [
	{
		"Item": ")",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\+<- Adding at 19 RE: \+                             (Rv:14, final=  14), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\+",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "+",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "+"
}

DumpParseNodes: As Passed [
	{
		"Item": "+",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->-<- Adding at 20 RE: -                              (Rv:15, final=  15), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "-",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "-",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "-"
}

DumpParseNodes: As Passed [
	{
		"Item": "-",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\*<- Adding at 21 RE: \*                             (Rv:16, final=  16), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\*",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "*",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "*"
}

DumpParseNodes: As Passed [
	{
		"Item": "*",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= -><<- Adding at 22 RE: <                              (Rv:17, final=  17), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003c",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003c",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u003c"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003c",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->><- Adding at 23 RE: >                              (Rv:18, final=  18), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003e",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003e",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u003e"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003e",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->/<- Adding at 24 RE: /                              (Rv:19, final=  19), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "/",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "/",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "/"
}

DumpParseNodes: As Passed [
	{
		"Item": "/",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->%<- Adding at 25 RE: %                              (Rv:27, final=  27), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "%",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "%",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "%"
}

DumpParseNodes: As Passed [
	{
		"Item": "%",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\|<- Adding at 26 RE: \|                             (Rv:24, final=  24), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\|",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "|",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "|"
}

DumpParseNodes: As Passed [
	{
		"Item": "|",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->,<- Adding at 27 RE: ,                              (Rv:21, final=  21), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ",",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ",",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ","
}

DumpParseNodes: As Passed [
	{
		"Item": ",",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\.<- Adding at 28 RE: \.                             (Rv:22, final=  22), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\.",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ".",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "."
}

DumpParseNodes: As Passed [
	{
		"Item": ".",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->!<- Adding at 29 RE: !                              (Rv:23, final=  23), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "!",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "!",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "!"
}

DumpParseNodes: As Passed [
	{
		"Item": "!",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->:<- Adding at 30 RE: :                              (Rv:25, final=  25), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ":",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ":",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ":"
}

DumpParseNodes: As Passed [
	{
		"Item": ":",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->=<- Adding at 31 RE: =                              (Rv:26, final=  26), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "=",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "="
}

DumpParseNodes: As Passed [
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->[ 	
]<- Adding at 32 RE: [ 	
]                        (Rv:40, final=  40), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "[ \t\n\u000c\r]",
	"Pos": 7,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": " \t\n\u000c\r",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 9,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\t\n\u000c\r "
}

DumpParseNodes: As Passed [
	{
		"Item": " \t\n\u000c\r",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 9,
		"Children": null
	}
]

M= ->.<- Adding at 33 RE: .                              (Rv: 0, final=   0), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ".",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ".",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 3,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "."
}

DumpParseNodes: As Passed [
	{
		"Item": ".",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 3,
		"Children": null
	}
]

ADDING AT 34 RE: <M_EOF>                        (Rv: 0, final=   0), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:498
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

BuildDFA_2: Nfa.Sigma Before Finialize-><-
NFA for (Before Finialize) ->S_Common<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:  T:0012 	 E:{ "<"   0 ->  1  [257]}  { "="   0 ->  3  [257]}  { ">"   0 ->  5  [257]}  { "&"   0 ->  7  [257]}  { "|"   0 ->  9  [257]}  { "!"   0 -> 11  [257]}  { "<"   0 -> 13  [257]}  { "{"   0 -> 15  [257]}  { "{"   0 -> 17  [257]}  { "%"   0 -> 19  [257]}  { "}"   0 -> 21  [257]}  { LOWER/uF8F6   0 -> 23  [275]}  { UPPER/uF8F7   0 -> 23  [275]}  { "_"   0 -> 23  [275]}  {  λ   0 -> 26  [326]}  { "\""   0 -> 29  [257]}  { "'"   0 -> 30  [257]}  { "`"   0 -> 31  [257]}  { "^"   0 -> 32  [257]}  { ")"   0 -> 33  [257]}  { "+"   0 -> 34  [257]}  { "-"   0 -> 35  [257]}  { "*"   0 -> 36  [257]}  { "<"   0 -> 37  [257]}  { ">"   0 -> 38  [257]}  { "/"   0 -> 39  [257]}  { "%"   0 -> 40  [257]}  { "|"   0 -> 41  [257]}  { ","   0 -> 42  [257]}  { "."   0 -> 43  [257]}  { "!"   0 -> 44  [257]}  { ":"   0 -> 45  [257]}  { "="   0 -> 46  [257]}  { " "   0 -> 47  [275]}  { "\t"   0 -> 47  [275]}  { "\n"   0 -> 47  [275]}  { "\f"   0 -> 47  [275]}  { "\r"   0 -> 47  [275]}  { DOT/uF8FA   0 -> 48  [292]}  { EOF/uF8FB   0 -> 49  [257]}  

  1[256]:         	 E:{ "="   1 ->  2  [257]}  

  2[256]:  T:0003 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:1


  3[256]:         	 E:{ "="   3 ->  4  [257]}  

  4[256]:  T:0001 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:2


  5[256]:         	 E:{ "="   5 ->  6  [257]}  

  6[256]:  T:0002 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:3


  7[256]:         	 E:{ "&"   7 ->  8  [257]}  

  8[256]:  T:0004 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:4


  9[256]:         	 E:{ "|"   9 -> 10  [257]}  

 10[256]:  T:0005 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:5


 11[256]:         	 E:{ "="  11 -> 12  [257]}  

 12[256]:  T:0010 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:6


 13[256]:         	 E:{ ">"  13 -> 14  [257]}  

 14[256]:  T:0010 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:7


 15[256]:         	 E:{ "{"  15 -> 16  [257]}  

 16[256]:  T:0006 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:3, MatchLength:2 ReplStr:-><-, PositionNumber:8


 17[256]:         	 E:{ "%"  17 -> 18  [257]}  

 18[256]:  T:0008 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:2, MatchLength:2 ReplStr:-><-, PositionNumber:9


 19[256]:         	 E:{ "}"  19 -> 20  [257]}  

 20[256]:  T:0009 	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:10


 21[256]:         	 E:{ "}"  21 -> 22  [257]}  

 22[256]:  T:0007 	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:11


 23[273]:         	 E:{ LOWER/uF8F6  23 -> 24  [275]}  { UPPER/uF8F7  23 -> 24  [275]}  { NUMERIC/uF8F5  23 -> 24  [275]}  { "_"  23 -> 24  [275]}  {  λ  23 -> 24  [318]}  

 24[273]:         	 E:{  λ  24 -> 23  [319]}  {  λ  24 -> 25  [321]}  

 25[320]:  T:0039 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:12


 26[229]:         	 E:{ NUMERIC/uF8F5  26 -> 27  [275]}  

 27[273]:         	 E:{  λ  27 -> 26  [327]}  {  λ  27 -> 28  [329]}  

 28[328]:  T:0041 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:13


 29[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:5, MatchLength:1 ReplStr:-><-, PositionNumber:14


 30[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:6, MatchLength:1 ReplStr:-><-, PositionNumber:15


 31[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:7, MatchLength:1 ReplStr:-><-, PositionNumber:16


 32[256]:  T:0020 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:17


 33[256]:  T:0013 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:19


 34[256]:  T:0014 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:20


 35[256]:  T:0015 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:21


 36[256]:  T:0016 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:22


 37[256]:  T:0017 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:23


 38[256]:  T:0018 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:24


 39[256]:  T:0019 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:25


 40[256]:  T:0027 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:26


 41[256]:  T:0024 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:27


 42[256]:  T:0021 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:28


 43[256]:  T:0022 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:29


 44[256]:  T:0023 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:30


 45[256]:  T:0025 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:31


 46[256]:  T:0026 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:32


 47[273]:  T:0040 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:33


 48[280]:         	 E:			NFA.Info: Action: (208) A_Pop|A_Warning(208), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:34


 49[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:35


BuildDFA_2: Nfa.Sigma ->	
 !"%&')*+,-./:<=>^_`{|}<-
Final NFA for ->S_Common<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:  T:0012 	 E:{ "<"   0 ->  1  [257]}  { "="   0 ->  3  [257]}  { ">"   0 ->  5  [257]}  { "&"   0 ->  7  [257]}  { "|"   0 ->  9  [257]}  { "!"   0 -> 11  [257]}  { "<"   0 -> 13  [257]}  { "{"   0 -> 15  [257]}  { "{"   0 -> 17  [257]}  { "%"   0 -> 19  [257]}  { "}"   0 -> 21  [257]}  { LOWER/uF8F6   0 -> 23  [275]}  { UPPER/uF8F7   0 -> 23  [275]}  { "_"   0 -> 23  [275]}  {  λ   0 -> 26  [326]}  { "\""   0 -> 29  [257]}  { "'"   0 -> 30  [257]}  { "`"   0 -> 31  [257]}  { "^"   0 -> 32  [257]}  { ")"   0 -> 33  [257]}  { "+"   0 -> 34  [257]}  { "-"   0 -> 35  [257]}  { "*"   0 -> 36  [257]}  { "<"   0 -> 37  [257]}  { ">"   0 -> 38  [257]}  { "/"   0 -> 39  [257]}  { "%"   0 -> 40  [257]}  { "|"   0 -> 41  [257]}  { ","   0 -> 42  [257]}  { "."   0 -> 43  [257]}  { "!"   0 -> 44  [257]}  { ":"   0 -> 45  [257]}  { "="   0 -> 46  [257]}  { " "   0 -> 47  [275]}  { "\t"   0 -> 47  [275]}  { "\n"   0 -> 47  [275]}  { "\f"   0 -> 47  [275]}  { "\r"   0 -> 47  [275]}  { DOT/uF8FA   0 -> 48  [292]}  { EOF/uF8FB   0 -> 49  [257]}  { "\t"   0 -> 48  [468]}  { "\n"   0 -> 48  [468]}  { "\f"   0 -> 48  [468]}  { "\r"   0 -> 48  [468]}  { " "   0 -> 48  [468]}  { "!"   0 -> 48  [468]}  { "\""   0 -> 48  [468]}  { "%"   0 -> 48  [468]}  { "&"   0 -> 48  [468]}  { "'"   0 -> 48  [468]}  { ")"   0 -> 48  [468]}  { "*"   0 -> 48  [468]}  { "+"   0 -> 48  [468]}  { ","   0 -> 48  [468]}  { "-"   0 -> 48  [468]}  { "."   0 -> 48  [468]}  { "/"   0 -> 48  [468]}  { ":"   0 -> 48  [468]}  { "<"   0 -> 48  [468]}  { "="   0 -> 48  [468]}  { ">"   0 -> 48  [468]}  { "^"   0 -> 48  [468]}  { "_"   0 -> 48  [468]}  { "`"   0 -> 48  [468]}  { "{"   0 -> 48  [468]}  { "|"   0 -> 48  [468]}  { "}"   0 -> 48  [468]}  { NUMERIC/uF8F5   0 -> 48  [468]}  { LOWER/uF8F6   0 -> 48  [468]}  { UPPER/uF8F7   0 -> 48  [468]}  { EOF/uF8FB   0 -> 48  [468]}  

  1[256]:         	 E:{ "="   1 ->  2  [257]}  

  2[256]:  T:0003 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:1


  3[256]:         	 E:{ "="   3 ->  4  [257]}  

  4[256]:  T:0001 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:2


  5[256]:         	 E:{ "="   5 ->  6  [257]}  

  6[256]:  T:0002 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:3


  7[256]:         	 E:{ "&"   7 ->  8  [257]}  

  8[256]:  T:0004 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:4


  9[256]:         	 E:{ "|"   9 -> 10  [257]}  

 10[256]:  T:0005 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:5


 11[256]:         	 E:{ "="  11 -> 12  [257]}  

 12[256]:  T:0010 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:6


 13[256]:         	 E:{ ">"  13 -> 14  [257]}  

 14[256]:  T:0010 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:7


 15[256]:         	 E:{ "{"  15 -> 16  [257]}  

 16[256]:  T:0006 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:3, MatchLength:2 ReplStr:-><-, PositionNumber:8


 17[256]:         	 E:{ "%"  17 -> 18  [257]}  

 18[256]:  T:0008 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:2, MatchLength:2 ReplStr:-><-, PositionNumber:9


 19[256]:         	 E:{ "}"  19 -> 20  [257]}  

 20[256]:  T:0009 	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:10


 21[256]:         	 E:{ "}"  21 -> 22  [257]}  

 22[256]:  T:0007 	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:11


 23[273]:         	 E:{ LOWER/uF8F6  23 -> 24  [275]}  { UPPER/uF8F7  23 -> 24  [275]}  { NUMERIC/uF8F5  23 -> 24  [275]}  { "_"  23 -> 24  [275]}  {  λ  23 -> 24  [318]}  

 24[273]:         	 E:{  λ  24 -> 23  [319]}  {  λ  24 -> 25  [321]}  

 25[320]:  T:0039 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:12


 26[229]:         	 E:{ NUMERIC/uF8F5  26 -> 27  [275]}  

 27[273]:         	 E:{  λ  27 -> 26  [327]}  {  λ  27 -> 28  [329]}  

 28[328]:  T:0041 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:13


 29[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:5, MatchLength:1 ReplStr:-><-, PositionNumber:14


 30[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:6, MatchLength:1 ReplStr:-><-, PositionNumber:15


 31[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:7, MatchLength:1 ReplStr:-><-, PositionNumber:16


 32[256]:  T:0020 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:17


 33[256]:  T:0013 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:19


 34[256]:  T:0014 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:20


 35[256]:  T:0015 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:21


 36[256]:  T:0016 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:22


 37[256]:  T:0017 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:23


 38[256]:  T:0018 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:24


 39[256]:  T:0019 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:25


 40[256]:  T:0027 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:26


 41[256]:  T:0024 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:27


 42[256]:  T:0021 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:28


 43[256]:  T:0022 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:29


 44[256]:  T:0023 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:30


 45[256]:  T:0025 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:31


 46[256]:  T:0026 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:32


 47[273]:  T:0040 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:33


 48[280]:         	 E:			NFA.Info: Action: (208) A_Pop|A_Warning(208), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:34


 49[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:35


Final DFA for ->S_Common<-

---------------------------- DFA Output -----------------------------------------------

DFA InitState: 0, Sigma ->	
 !"%&')*+,-./:<=>^_`{|}<-

 St:     StateName     StateSet ✔              	Edges

  0:          0-26       [0,26] ✔ : T:0012 	 E:{ "\t"   0 ->  1  }  { "\n"   0 ->  1  }  { "\f"   0 ->  1  }  { "\r"   0 ->  1  }  { " "   0 ->  1  }  { "!"   0 ->  2  }  { "\""   0 ->  3  }  { "%"   0 ->  4  }  { "&"   0 ->  5  }  { "'"   0 ->  6  }  { ")"   0 ->  7  }  { "*"   0 ->  8  }  { "+"   0 ->  9  }  { ","   0 -> 10  }  { "-"   0 -> 11  }  { "."   0 -> 12  }  { "/"   0 -> 13  }  { ":"   0 -> 14  }  { "<"   0 -> 15  }  { "="   0 -> 16  }  { ">"   0 -> 17  }  { "^"   0 -> 18  }  { "_"   0 -> 19  }  { "`"   0 -> 20  }  { "{"   0 -> 21  }  { "|"   0 -> 22  }  { "}"   0 -> 23  }  { NUMERIC/uF8F5   0 -> 24  }  { LOWER/uF8F6   0 -> 19  }  { UPPER/uF8F7   0 -> 19  }  { DOT/uF8FA   0 -> 25  }  { EOF/uF8FB   0 -> 26  }  

  1:         47-48      [47,48] ✔ : T:0040 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  2:      11-44-48   [11,44,48] ✔ : T:0023 	 E:{ "="   2 -> 27  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  3:         29-48      [29,48] ✔ : T:0040 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:5, MatchLength:1 ReplStr:-><-

  4:      19-40-48   [19,40,48] ✔ : T:0027 	 E:{ "}"   4 -> 28  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  5:          7-48       [7,48] ✔ :        	 E:{ "&"   5 -> 29  }  

  6:         30-48      [30,48] ✔ : T:0040 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:6, MatchLength:1 ReplStr:-><-

  7:         33-48      [33,48] ✔ : T:0013 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  8:         36-48      [36,48] ✔ : T:0016 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  9:         34-48      [34,48] ✔ : T:0014 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 10:         42-48      [42,48] ✔ : T:0021 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 11:         35-48      [35,48] ✔ : T:0015 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 12:         43-48      [43,48] ✔ : T:0022 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 13:         39-48      [39,48] ✔ : T:0019 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 14:         45-48      [45,48] ✔ : T:0025 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 15:    1-13-37-48 [1,13,37,48] ✔ : T:0017 	 E:{ "="  15 -> 30  }  { ">"  15 -> 31  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 16:       3-46-48    [3,46,48] ✔ : T:0026 	 E:{ "="  16 -> 32  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 17:       5-38-48    [5,38,48] ✔ : T:0018 	 E:{ "="  17 -> 33  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 18:         32-48      [32,48] ✔ : T:0020 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 19:   23-24-25-48 [23,24,25,48] ✔ : T:0039 	 E:{ "_"  19 -> 34  }  { NUMERIC/uF8F5  19 -> 34  }  { LOWER/uF8F6  19 -> 34  }  { UPPER/uF8F7  19 -> 34  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 20:         31-48      [31,48] ✔ : T:0040 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:7, MatchLength:1 ReplStr:-><-

 21:      15-17-48   [15,17,48] ✔ :        	 E:{ "%"  21 -> 35  }  { "{"  21 -> 36  }  

 22:       9-41-48    [9,41,48] ✔ : T:0024 	 E:{ "|"  22 -> 37  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 23:         21-48      [21,48] ✔ :        	 E:{ "}"  23 -> 38  }  

 24:   26-27-28-48 [26,27,28,48] ✔ : T:0041 	 E:{ NUMERIC/uF8F5  24 -> 39  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 25:            48         [48] ✔ :        	 E:

 26:         48-49      [48,49] ✔ :        	 E:

 27:            12         [12] ✔ : T:0010 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 28:            20         [20] ✔ : T:0009 	 E:
			DFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-

 29:             8          [8] ✔ : T:0004 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 30:             2          [2] ✔ : T:0003 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 31:            14         [14] ✔ : T:0010 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 32:             4          [4] ✔ : T:0001 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 33:             6          [6] ✔ : T:0002 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 34:      23-24-25   [23,24,25] ✔ : T:0039 	 E:{ "_"  34 -> 34  }  { NUMERIC/uF8F5  34 -> 34  }  { LOWER/uF8F6  34 -> 34  }  { UPPER/uF8F7  34 -> 34  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 35:            18         [18] ✔ : T:0008 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:2, MatchLength:2 ReplStr:-><-

 36:            16         [16] ✔ : T:0006 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:3, MatchLength:2 ReplStr:-><-

 37:            10         [10] ✔ : T:0005 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 38:            22         [22] ✔ : T:0007 	 E:
			DFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-

 39:      26-27-28   [26,27,28] ✔ : T:0041 	 E:{ NUMERIC/uF8F5  39 -> 39  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

M= -><=<- Adding at  0 RE: <=                             (Rv: 3, final=   3), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003c=",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003c",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u003c="
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003c",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->==<- Adding at  1 RE: ==                             (Rv: 1, final=   1), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "==",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "="
}

DumpParseNodes: As Passed [
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->>=<- Adding at  2 RE: >=                             (Rv: 2, final=   2), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003e=",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003e",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "=\u003e"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003e",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->&&<- Adding at  3 RE: &&                             (Rv: 4, final=   4), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u0026\u0026",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u0026",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "\u0026",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u0026"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u0026",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "\u0026",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\|\|<- Adding at  4 RE: \|\|                           (Rv: 5, final=   5), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\|\\|",
	"Pos": 4,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "|",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "|",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "|"
}

DumpParseNodes: As Passed [
	{
		"Item": "|",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "|",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->!=<- Adding at  5 RE: !=                             (Rv:10, final=  10), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "!=",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "!",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "!="
}

DumpParseNodes: As Passed [
	{
		"Item": "!",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= -><><- Adding at  6 RE: <>                             (Rv:10, final=  10), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003c\u003e",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003c",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "\u003e",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u003c\u003e"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003c",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "\u003e",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\{\{<- Adding at  7 RE: \{\{                           (Rv: 6, final=   6), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\{\\{",
	"Pos": 4,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "{"
}

DumpParseNodes: As Passed [
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\{%<- Adding at  8 RE: \{%                            (Rv: 8, final=   8), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\{%",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "%",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "%{"
}

DumpParseNodes: As Passed [
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "%",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->%\}<- Adding at  9 RE: %\}                            (Rv: 9, final=   9), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "%\\}",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "%",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "}",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "%}"
}

DumpParseNodes: As Passed [
	{
		"Item": "%",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "}",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\}\}<- Adding at 10 RE: \}\}                           (Rv: 7, final=   7), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\}\\}",
	"Pos": 4,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "}",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "}",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "}"
}

DumpParseNodes: As Passed [
	{
		"Item": "}",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "}",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->[a-zA-Z_][a-zA-Z0-9_]*<- Adding at 11 RE: [a-zA-Z_][a-zA-Z0-9_]*         (Rv:39, final=  39), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "[a-zA-Z_][a-zA-Z0-9_]*",
	"Pos": 22,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "_",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 9,
				"Children": null
			},
			{
				"Item": "*",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 4,
				"Children": [
					{
						"Item": "_",
						"Mm": 0,
						"Nn": 0,
						"LR_Tok": 9,
						"Children": null
					}
				]
			}
		]
	},
	"Error": null,
	"Sigma": "_"
}

DumpParseNodes: As Passed [
	{
		"Item": "_",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 9,
		"Children": null
	},
	{
		"Item": "*",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 4,
		"Children": [
			{
				"Item": "_",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 9,
				"Children": null
			}
		]
	}
]

M= ->[0-9]+<- Adding at 12 RE: [0-9]+                         (Rv:41, final=  41), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "[0-9]+",
	"Pos": 6,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "+",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 5,
				"Children": [
					{
						"Item": "",
						"Mm": 0,
						"Nn": 0,
						"LR_Tok": 9,
						"Children": null
					}
				]
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "+",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 5,
		"Children": [
			{
				"Item": "",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 9,
				"Children": null
			}
		]
	}
]

M= ->"<- Adding at 13 RE: "                              (Rv:40, final=  40), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\"",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\"",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\""
}

DumpParseNodes: As Passed [
	{
		"Item": "\"",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->'<- Adding at 14 RE: '                              (Rv:40, final=  40), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "'",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "'",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "'"
}

DumpParseNodes: As Passed [
	{
		"Item": "'",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->`<- Adding at 15 RE: `                              (Rv:40, final=  40), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "`",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "`",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "`"
}

DumpParseNodes: As Passed [
	{
		"Item": "`",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\^<- Adding at 16 RE: \^                             (Rv:20, final=  20), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\^",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "^",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "^"
}

DumpParseNodes: As Passed [
	{
		"Item": "^",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->(<- Adding at 17 RE: (                              (Rv:12, final=  12), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "(",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "(",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 7,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "(",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 7,
		"Children": null
	}
]

M= ->)<- Adding at 18 RE: )                              (Rv:13, final=  13), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
Warning: Invalid ')' at not properly nested.   Assuming that this was to match a character.
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ")",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ")",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": [
		{}
	],
	"Sigma": ")"
}

DumpParseNodes: As Passed [
	{
		"Item": ")",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\+<- Adding at 19 RE: \+                             (Rv:14, final=  14), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\+",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "+",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "+"
}

DumpParseNodes: As Passed [
	{
		"Item": "+",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->-<- Adding at 20 RE: -                              (Rv:15, final=  15), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "-",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "-",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "-"
}

DumpParseNodes: As Passed [
	{
		"Item": "-",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\*<- Adding at 21 RE: \*                             (Rv:16, final=  16), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\*",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "*",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "*"
}

DumpParseNodes: As Passed [
	{
		"Item": "*",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= -><<- Adding at 22 RE: <                              (Rv:17, final=  17), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003c",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003c",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u003c"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003c",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->><- Adding at 23 RE: >                              (Rv:18, final=  18), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003e",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003e",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u003e"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003e",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->/<- Adding at 24 RE: /                              (Rv:19, final=  19), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "/",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "/",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "/"
}

DumpParseNodes: As Passed [
	{
		"Item": "/",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->%<- Adding at 25 RE: %                              (Rv:27, final=  27), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "%",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "%",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "%"
}

DumpParseNodes: As Passed [
	{
		"Item": "%",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\|<- Adding at 26 RE: \|                             (Rv:24, final=  24), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\|",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "|",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "|"
}

DumpParseNodes: As Passed [
	{
		"Item": "|",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->,<- Adding at 27 RE: ,                              (Rv:21, final=  21), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ",",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ",",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ","
}

DumpParseNodes: As Passed [
	{
		"Item": ",",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\.<- Adding at 28 RE: \.                             (Rv:22, final=  22), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\.",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ".",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "."
}

DumpParseNodes: As Passed [
	{
		"Item": ".",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->!<- Adding at 29 RE: !                              (Rv:23, final=  23), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "!",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "!",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "!"
}

DumpParseNodes: As Passed [
	{
		"Item": "!",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->:<- Adding at 30 RE: :                              (Rv:25, final=  25), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ":",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ":",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ":"
}

DumpParseNodes: As Passed [
	{
		"Item": ":",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->=<- Adding at 31 RE: =                              (Rv:26, final=  26), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "=",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "="
}

DumpParseNodes: As Passed [
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->[ 	
]<- Adding at 32 RE: [ 	
]                        (Rv:40, final=  40), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "[ \t\n\u000c\r]",
	"Pos": 7,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": " \t\n\u000c\r",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 9,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\t\n\u000c\r "
}

DumpParseNodes: As Passed [
	{
		"Item": " \t\n\u000c\r",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 9,
		"Children": null
	}
]

M= ->.<- Adding at 33 RE: .                              (Rv: 0, final=   0), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ".",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ".",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 3,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "."
}

DumpParseNodes: As Passed [
	{
		"Item": ".",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 3,
		"Children": null
	}
]

ADDING AT 34 RE: <M_EOF>                        (Rv: 0, final=   0), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:498
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

BuildDFA_2: Nfa.Sigma Before Finialize-><-
NFA for (Before Finialize) ->S_TAG<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:  T:0012 	 E:{ "<"   0 ->  1  [257]}  { "="   0 ->  3  [257]}  { ">"   0 ->  5  [257]}  { "&"   0 ->  7  [257]}  { "|"   0 ->  9  [257]}  { "!"   0 -> 11  [257]}  { "<"   0 -> 13  [257]}  { "{"   0 -> 15  [257]}  { "{"   0 -> 17  [257]}  { "%"   0 -> 19  [257]}  { "}"   0 -> 21  [257]}  { LOWER/uF8F6   0 -> 23  [275]}  { UPPER/uF8F7   0 -> 23  [275]}  { "_"   0 -> 23  [275]}  {  λ   0 -> 26  [326]}  { "\""   0 -> 29  [257]}  { "'"   0 -> 30  [257]}  { "`"   0 -> 31  [257]}  { "^"   0 -> 32  [257]}  { ")"   0 -> 33  [257]}  { "+"   0 -> 34  [257]}  { "-"   0 -> 35  [257]}  { "*"   0 -> 36  [257]}  { "<"   0 -> 37  [257]}  { ">"   0 -> 38  [257]}  { "/"   0 -> 39  [257]}  { "%"   0 -> 40  [257]}  { "|"   0 -> 41  [257]}  { ","   0 -> 42  [257]}  { "."   0 -> 43  [257]}  { "!"   0 -> 44  [257]}  { ":"   0 -> 45  [257]}  { "="   0 -> 46  [257]}  { " "   0 -> 47  [275]}  { "\t"   0 -> 47  [275]}  { "\n"   0 -> 47  [275]}  { "\f"   0 -> 47  [275]}  { "\r"   0 -> 47  [275]}  { DOT/uF8FA   0 -> 48  [292]}  { EOF/uF8FB   0 -> 49  [257]}  

  1[256]:         	 E:{ "="   1 ->  2  [257]}  

  2[256]:  T:0003 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:1


  3[256]:         	 E:{ "="   3 ->  4  [257]}  

  4[256]:  T:0001 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:2


  5[256]:         	 E:{ "="   5 ->  6  [257]}  

  6[256]:  T:0002 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:3


  7[256]:         	 E:{ "&"   7 ->  8  [257]}  

  8[256]:  T:0004 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:4


  9[256]:         	 E:{ "|"   9 -> 10  [257]}  

 10[256]:  T:0005 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:5


 11[256]:         	 E:{ "="  11 -> 12  [257]}  

 12[256]:  T:0010 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:6


 13[256]:         	 E:{ ">"  13 -> 14  [257]}  

 14[256]:  T:0010 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:7


 15[256]:         	 E:{ "{"  15 -> 16  [257]}  

 16[256]:  T:0006 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:3, MatchLength:2 ReplStr:-><-, PositionNumber:8


 17[256]:         	 E:{ "%"  17 -> 18  [257]}  

 18[256]:  T:0008 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:2, MatchLength:2 ReplStr:-><-, PositionNumber:9


 19[256]:         	 E:{ "}"  19 -> 20  [257]}  

 20[256]:  T:0009 	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:10


 21[256]:         	 E:{ "}"  21 -> 22  [257]}  

 22[256]:  T:0007 	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:11


 23[273]:         	 E:{ LOWER/uF8F6  23 -> 24  [275]}  { UPPER/uF8F7  23 -> 24  [275]}  { NUMERIC/uF8F5  23 -> 24  [275]}  { "_"  23 -> 24  [275]}  {  λ  23 -> 24  [318]}  

 24[273]:         	 E:{  λ  24 -> 23  [319]}  {  λ  24 -> 25  [321]}  

 25[320]:  T:0039 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:12


 26[229]:         	 E:{ NUMERIC/uF8F5  26 -> 27  [275]}  

 27[273]:         	 E:{  λ  27 -> 26  [327]}  {  λ  27 -> 28  [329]}  

 28[328]:  T:0041 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:13


 29[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:5, MatchLength:1 ReplStr:-><-, PositionNumber:14


 30[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:6, MatchLength:1 ReplStr:-><-, PositionNumber:15


 31[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:7, MatchLength:1 ReplStr:-><-, PositionNumber:16


 32[256]:  T:0020 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:17


 33[256]:  T:0013 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:19


 34[256]:  T:0014 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:20


 35[256]:  T:0015 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:21


 36[256]:  T:0016 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:22


 37[256]:  T:0017 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:23


 38[256]:  T:0018 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:24


 39[256]:  T:0019 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:25


 40[256]:  T:0027 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:26


 41[256]:  T:0024 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:27


 42[256]:  T:0021 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:28


 43[256]:  T:0022 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:29


 44[256]:  T:0023 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:30


 45[256]:  T:0025 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:31


 46[256]:  T:0026 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:32


 47[273]:  T:0040 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:33


 48[280]:         	 E:			NFA.Info: Action: (208) A_Pop|A_Warning(208), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:34


 49[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:35


BuildDFA_2: Nfa.Sigma ->	
 !"%&')*+,-./:<=>^_`{|}<-
Final NFA for ->S_TAG<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:  T:0012 	 E:{ "<"   0 ->  1  [257]}  { "="   0 ->  3  [257]}  { ">"   0 ->  5  [257]}  { "&"   0 ->  7  [257]}  { "|"   0 ->  9  [257]}  { "!"   0 -> 11  [257]}  { "<"   0 -> 13  [257]}  { "{"   0 -> 15  [257]}  { "{"   0 -> 17  [257]}  { "%"   0 -> 19  [257]}  { "}"   0 -> 21  [257]}  { LOWER/uF8F6   0 -> 23  [275]}  { UPPER/uF8F7   0 -> 23  [275]}  { "_"   0 -> 23  [275]}  {  λ   0 -> 26  [326]}  { "\""   0 -> 29  [257]}  { "'"   0 -> 30  [257]}  { "`"   0 -> 31  [257]}  { "^"   0 -> 32  [257]}  { ")"   0 -> 33  [257]}  { "+"   0 -> 34  [257]}  { "-"   0 -> 35  [257]}  { "*"   0 -> 36  [257]}  { "<"   0 -> 37  [257]}  { ">"   0 -> 38  [257]}  { "/"   0 -> 39  [257]}  { "%"   0 -> 40  [257]}  { "|"   0 -> 41  [257]}  { ","   0 -> 42  [257]}  { "."   0 -> 43  [257]}  { "!"   0 -> 44  [257]}  { ":"   0 -> 45  [257]}  { "="   0 -> 46  [257]}  { " "   0 -> 47  [275]}  { "\t"   0 -> 47  [275]}  { "\n"   0 -> 47  [275]}  { "\f"   0 -> 47  [275]}  { "\r"   0 -> 47  [275]}  { DOT/uF8FA   0 -> 48  [292]}  { EOF/uF8FB   0 -> 49  [257]}  { "\t"   0 -> 48  [468]}  { "\n"   0 -> 48  [468]}  { "\f"   0 -> 48  [468]}  { "\r"   0 -> 48  [468]}  { " "   0 -> 48  [468]}  { "!"   0 -> 48  [468]}  { "\""   0 -> 48  [468]}  { "%"   0 -> 48  [468]}  { "&"   0 -> 48  [468]}  { "'"   0 -> 48  [468]}  { ")"   0 -> 48  [468]}  { "*"   0 -> 48  [468]}  { "+"   0 -> 48  [468]}  { ","   0 -> 48  [468]}  { "-"   0 -> 48  [468]}  { "."   0 -> 48  [468]}  { "/"   0 -> 48  [468]}  { ":"   0 -> 48  [468]}  { "<"   0 -> 48  [468]}  { "="   0 -> 48  [468]}  { ">"   0 -> 48  [468]}  { "^"   0 -> 48  [468]}  { "_"   0 -> 48  [468]}  { "`"   0 -> 48  [468]}  { "{"   0 -> 48  [468]}  { "|"   0 -> 48  [468]}  { "}"   0 -> 48  [468]}  { NUMERIC/uF8F5   0 -> 48  [468]}  { LOWER/uF8F6   0 -> 48  [468]}  { UPPER/uF8F7   0 -> 48  [468]}  { EOF/uF8FB   0 -> 48  [468]}  

  1[256]:         	 E:{ "="   1 ->  2  [257]}  

  2[256]:  T:0003 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:1


  3[256]:         	 E:{ "="   3 ->  4  [257]}  

  4[256]:  T:0001 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:2


  5[256]:         	 E:{ "="   5 ->  6  [257]}  

  6[256]:  T:0002 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:3


  7[256]:         	 E:{ "&"   7 ->  8  [257]}  

  8[256]:  T:0004 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:4


  9[256]:         	 E:{ "|"   9 -> 10  [257]}  

 10[256]:  T:0005 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:5


 11[256]:         	 E:{ "="  11 -> 12  [257]}  

 12[256]:  T:0010 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:6


 13[256]:         	 E:{ ">"  13 -> 14  [257]}  

 14[256]:  T:0010 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:7


 15[256]:         	 E:{ "{"  15 -> 16  [257]}  

 16[256]:  T:0006 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:3, MatchLength:2 ReplStr:-><-, PositionNumber:8


 17[256]:         	 E:{ "%"  17 -> 18  [257]}  

 18[256]:  T:0008 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:2, MatchLength:2 ReplStr:-><-, PositionNumber:9


 19[256]:         	 E:{ "}"  19 -> 20  [257]}  

 20[256]:  T:0009 	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:10


 21[256]:         	 E:{ "}"  21 -> 22  [257]}  

 22[256]:  T:0007 	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:11


 23[273]:         	 E:{ LOWER/uF8F6  23 -> 24  [275]}  { UPPER/uF8F7  23 -> 24  [275]}  { NUMERIC/uF8F5  23 -> 24  [275]}  { "_"  23 -> 24  [275]}  {  λ  23 -> 24  [318]}  

 24[273]:         	 E:{  λ  24 -> 23  [319]}  {  λ  24 -> 25  [321]}  

 25[320]:  T:0039 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:12


 26[229]:         	 E:{ NUMERIC/uF8F5  26 -> 27  [275]}  

 27[273]:         	 E:{  λ  27 -> 26  [327]}  {  λ  27 -> 28  [329]}  

 28[328]:  T:0041 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:13


 29[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:5, MatchLength:1 ReplStr:-><-, PositionNumber:14


 30[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:6, MatchLength:1 ReplStr:-><-, PositionNumber:15


 31[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:7, MatchLength:1 ReplStr:-><-, PositionNumber:16


 32[256]:  T:0020 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:17


 33[256]:  T:0013 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:19


 34[256]:  T:0014 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:20


 35[256]:  T:0015 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:21


 36[256]:  T:0016 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:22


 37[256]:  T:0017 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:23


 38[256]:  T:0018 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:24


 39[256]:  T:0019 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:25


 40[256]:  T:0027 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:26


 41[256]:  T:0024 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:27


 42[256]:  T:0021 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:28


 43[256]:  T:0022 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:29


 44[256]:  T:0023 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:30


 45[256]:  T:0025 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:31


 46[256]:  T:0026 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:32


 47[273]:  T:0040 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:33


 48[280]:         	 E:			NFA.Info: Action: (208) A_Pop|A_Warning(208), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:34


 49[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:35


Final DFA for ->S_TAG<-

---------------------------- DFA Output -----------------------------------------------

DFA InitState: 0, Sigma ->	
 !"%&')*+,-./:<=>^_`{|}<-

 St:     StateName     StateSet ✔              	Edges

  0:          0-26       [0,26] ✔ : T:0012 	 E:{ "\t"   0 ->  1  }  { "\n"   0 ->  1  }  { "\f"   0 ->  1  }  { "\r"   0 ->  1  }  { " "   0 ->  1  }  { "!"   0 ->  2  }  { "\""   0 ->  3  }  { "%"   0 ->  4  }  { "&"   0 ->  5  }  { "'"   0 ->  6  }  { ")"   0 ->  7  }  { "*"   0 ->  8  }  { "+"   0 ->  9  }  { ","   0 -> 10  }  { "-"   0 -> 11  }  { "."   0 -> 12  }  { "/"   0 -> 13  }  { ":"   0 -> 14  }  { "<"   0 -> 15  }  { "="   0 -> 16  }  { ">"   0 -> 17  }  { "^"   0 -> 18  }  { "_"   0 -> 19  }  { "`"   0 -> 20  }  { "{"   0 -> 21  }  { "|"   0 -> 22  }  { "}"   0 -> 23  }  { NUMERIC/uF8F5   0 -> 24  }  { LOWER/uF8F6   0 -> 19  }  { UPPER/uF8F7   0 -> 19  }  { DOT/uF8FA   0 -> 25  }  { EOF/uF8FB   0 -> 26  }  

  1:         47-48      [47,48] ✔ : T:0040 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  2:      11-44-48   [11,44,48] ✔ : T:0023 	 E:{ "="   2 -> 27  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  3:         29-48      [29,48] ✔ : T:0040 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:5, MatchLength:1 ReplStr:-><-

  4:      19-40-48   [19,40,48] ✔ : T:0027 	 E:{ "}"   4 -> 28  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  5:          7-48       [7,48] ✔ :        	 E:{ "&"   5 -> 29  }  

  6:         30-48      [30,48] ✔ : T:0040 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:6, MatchLength:1 ReplStr:-><-

  7:         33-48      [33,48] ✔ : T:0013 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  8:         36-48      [36,48] ✔ : T:0016 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  9:         34-48      [34,48] ✔ : T:0014 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 10:         42-48      [42,48] ✔ : T:0021 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 11:         35-48      [35,48] ✔ : T:0015 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 12:         43-48      [43,48] ✔ : T:0022 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 13:         39-48      [39,48] ✔ : T:0019 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 14:         45-48      [45,48] ✔ : T:0025 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 15:    1-13-37-48 [1,13,37,48] ✔ : T:0017 	 E:{ "="  15 -> 30  }  { ">"  15 -> 31  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 16:       3-46-48    [3,46,48] ✔ : T:0026 	 E:{ "="  16 -> 32  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 17:       5-38-48    [5,38,48] ✔ : T:0018 	 E:{ "="  17 -> 33  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 18:         32-48      [32,48] ✔ : T:0020 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 19:   23-24-25-48 [23,24,25,48] ✔ : T:0039 	 E:{ "_"  19 -> 34  }  { NUMERIC/uF8F5  19 -> 34  }  { LOWER/uF8F6  19 -> 34  }  { UPPER/uF8F7  19 -> 34  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 20:         31-48      [31,48] ✔ : T:0040 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:7, MatchLength:1 ReplStr:-><-

 21:      15-17-48   [15,17,48] ✔ :        	 E:{ "%"  21 -> 35  }  { "{"  21 -> 36  }  

 22:       9-41-48    [9,41,48] ✔ : T:0024 	 E:{ "|"  22 -> 37  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 23:         21-48      [21,48] ✔ :        	 E:{ "}"  23 -> 38  }  

 24:   26-27-28-48 [26,27,28,48] ✔ : T:0041 	 E:{ NUMERIC/uF8F5  24 -> 39  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 25:            48         [48] ✔ :        	 E:

 26:         48-49      [48,49] ✔ :        	 E:

 27:            12         [12] ✔ : T:0010 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 28:            20         [20] ✔ : T:0009 	 E:
			DFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-

 29:             8          [8] ✔ : T:0004 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 30:             2          [2] ✔ : T:0003 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 31:            14         [14] ✔ : T:0010 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 32:             4          [4] ✔ : T:0001 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 33:             6          [6] ✔ : T:0002 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 34:      23-24-25   [23,24,25] ✔ : T:0039 	 E:{ "_"  34 -> 34  }  { NUMERIC/uF8F5  34 -> 34  }  { LOWER/uF8F6  34 -> 34  }  { UPPER/uF8F7  34 -> 34  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 35:            18         [18] ✔ : T:0008 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:2, MatchLength:2 ReplStr:-><-

 36:            16         [16] ✔ : T:0006 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:3, MatchLength:2 ReplStr:-><-

 37:            10         [10] ✔ : T:0005 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 38:            22         [22] ✔ : T:0007 	 E:
			DFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-

 39:      26-27-28   [26,27,28] ✔ : T:0041 	 E:{ NUMERIC/uF8F5  39 -> 39  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

M= -><=<- Adding at  0 RE: <=                             (Rv: 3, final=   3), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003c=",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003c",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u003c="
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003c",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->==<- Adding at  1 RE: ==                             (Rv: 1, final=   1), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "==",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "="
}

DumpParseNodes: As Passed [
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->>=<- Adding at  2 RE: >=                             (Rv: 2, final=   2), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003e=",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003e",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "=\u003e"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003e",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->&&<- Adding at  3 RE: &&                             (Rv: 4, final=   4), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u0026\u0026",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u0026",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "\u0026",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u0026"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u0026",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "\u0026",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\|\|<- Adding at  4 RE: \|\|                           (Rv: 5, final=   5), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\|\\|",
	"Pos": 4,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "|",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "|",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "|"
}

DumpParseNodes: As Passed [
	{
		"Item": "|",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "|",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->!=<- Adding at  5 RE: !=                             (Rv:10, final=  10), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "!=",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "!",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "!="
}

DumpParseNodes: As Passed [
	{
		"Item": "!",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= -><><- Adding at  6 RE: <>                             (Rv:10, final=  10), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003c\u003e",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003c",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "\u003e",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u003c\u003e"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003c",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "\u003e",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\{\{<- Adding at  7 RE: \{\{                           (Rv: 6, final=   6), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\{\\{",
	"Pos": 4,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "{"
}

DumpParseNodes: As Passed [
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\{%<- Adding at  8 RE: \{%                            (Rv: 8, final=   8), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\{%",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "{",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "%",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "%{"
}

DumpParseNodes: As Passed [
	{
		"Item": "{",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "%",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->%\}<- Adding at  9 RE: %\}                            (Rv: 9, final=   9), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "%\\}",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "%",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "}",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "%}"
}

DumpParseNodes: As Passed [
	{
		"Item": "%",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "}",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\}\}<- Adding at 10 RE: \}\}                           (Rv: 7, final=   7), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\}\\}",
	"Pos": 4,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "}",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "}",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "}"
}

DumpParseNodes: As Passed [
	{
		"Item": "}",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "}",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->[a-zA-Z_][a-zA-Z0-9_]*<- Adding at 11 RE: [a-zA-Z_][a-zA-Z0-9_]*         (Rv:39, final=  39), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "[a-zA-Z_][a-zA-Z0-9_]*",
	"Pos": 22,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "_",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 9,
				"Children": null
			},
			{
				"Item": "*",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 4,
				"Children": [
					{
						"Item": "_",
						"Mm": 0,
						"Nn": 0,
						"LR_Tok": 9,
						"Children": null
					}
				]
			}
		]
	},
	"Error": null,
	"Sigma": "_"
}

DumpParseNodes: As Passed [
	{
		"Item": "_",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 9,
		"Children": null
	},
	{
		"Item": "*",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 4,
		"Children": [
			{
				"Item": "_",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 9,
				"Children": null
			}
		]
	}
]

M= ->[0-9]+<- Adding at 12 RE: [0-9]+                         (Rv:41, final=  41), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "[0-9]+",
	"Pos": 6,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "+",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 5,
				"Children": [
					{
						"Item": "",
						"Mm": 0,
						"Nn": 0,
						"LR_Tok": 9,
						"Children": null
					}
				]
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "+",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 5,
		"Children": [
			{
				"Item": "",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 9,
				"Children": null
			}
		]
	}
]

M= ->"<- Adding at 13 RE: "                              (Rv:40, final=  40), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\"",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\"",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\""
}

DumpParseNodes: As Passed [
	{
		"Item": "\"",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->'<- Adding at 14 RE: '                              (Rv:40, final=  40), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "'",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "'",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "'"
}

DumpParseNodes: As Passed [
	{
		"Item": "'",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->`<- Adding at 15 RE: `                              (Rv:40, final=  40), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "`",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "`",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "`"
}

DumpParseNodes: As Passed [
	{
		"Item": "`",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\^<- Adding at 16 RE: \^                             (Rv:20, final=  20), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\^",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "^",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "^"
}

DumpParseNodes: As Passed [
	{
		"Item": "^",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->(<- Adding at 17 RE: (                              (Rv:12, final=  12), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "(",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "(",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 7,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "(",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 7,
		"Children": null
	}
]

M= ->)<- Adding at 18 RE: )                              (Rv:13, final=  13), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
Warning: Invalid ')' at not properly nested.   Assuming that this was to match a character.
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ")",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ")",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": [
		{}
	],
	"Sigma": ")"
}

DumpParseNodes: As Passed [
	{
		"Item": ")",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\+<- Adding at 19 RE: \+                             (Rv:14, final=  14), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\+",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "+",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "+"
}

DumpParseNodes: As Passed [
	{
		"Item": "+",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->-<- Adding at 20 RE: -                              (Rv:15, final=  15), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "-",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "-",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "-"
}

DumpParseNodes: As Passed [
	{
		"Item": "-",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\*<- Adding at 21 RE: \*                             (Rv:16, final=  16), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\*",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "*",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "*"
}

DumpParseNodes: As Passed [
	{
		"Item": "*",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= -><<- Adding at 22 RE: <                              (Rv:17, final=  17), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003c",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003c",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u003c"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003c",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->><- Adding at 23 RE: >                              (Rv:18, final=  18), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\u003e",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\u003e",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\u003e"
}

DumpParseNodes: As Passed [
	{
		"Item": "\u003e",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->/<- Adding at 24 RE: /                              (Rv:19, final=  19), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "/",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "/",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "/"
}

DumpParseNodes: As Passed [
	{
		"Item": "/",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->%<- Adding at 25 RE: %                              (Rv:27, final=  27), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "%",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "%",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "%"
}

DumpParseNodes: As Passed [
	{
		"Item": "%",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\|<- Adding at 26 RE: \|                             (Rv:24, final=  24), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\|",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "|",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "|"
}

DumpParseNodes: As Passed [
	{
		"Item": "|",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->,<- Adding at 27 RE: ,                              (Rv:21, final=  21), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ",",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ",",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ","
}

DumpParseNodes: As Passed [
	{
		"Item": ",",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->\.<- Adding at 28 RE: \.                             (Rv:22, final=  22), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\.",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ".",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "."
}

DumpParseNodes: As Passed [
	{
		"Item": ".",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->!<- Adding at 29 RE: !                              (Rv:23, final=  23), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "!",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "!",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "!"
}

DumpParseNodes: As Passed [
	{
		"Item": "!",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->:<- Adding at 30 RE: :                              (Rv:25, final=  25), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ":",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ":",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ":"
}

DumpParseNodes: As Passed [
	{
		"Item": ":",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->=<- Adding at 31 RE: =                              (Rv:26, final=  26), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "=",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "=",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "="
}

DumpParseNodes: As Passed [
	{
		"Item": "=",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->[ 	
]<- Adding at 32 RE: [ 	
]                        (Rv:40, final=  40), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "[ \t\n\u000c\r]",
	"Pos": 7,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": " \t\n\u000c\r",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 9,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\t\n\u000c\r "
}

DumpParseNodes: As Passed [
	{
		"Item": " \t\n\u000c\r",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 9,
		"Children": null
	}
]

M= ->.<- Adding at 33 RE: .                              (Rv: 0, final=   0), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ".",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ".",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 3,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "."
}

DumpParseNodes: As Passed [
	{
		"Item": ".",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 3,
		"Children": null
	}
]

ADDING AT 34 RE: <M_EOF>                        (Rv: 0, final=   0), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:498
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

BuildDFA_2: Nfa.Sigma Before Finialize-><-
NFA for (Before Finialize) ->S_VAR<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:  T:0012 	 E:{ "<"   0 ->  1  [257]}  { "="   0 ->  3  [257]}  { ">"   0 ->  5  [257]}  { "&"   0 ->  7  [257]}  { "|"   0 ->  9  [257]}  { "!"   0 -> 11  [257]}  { "<"   0 -> 13  [257]}  { "{"   0 -> 15  [257]}  { "{"   0 -> 17  [257]}  { "%"   0 -> 19  [257]}  { "}"   0 -> 21  [257]}  { LOWER/uF8F6   0 -> 23  [275]}  { UPPER/uF8F7   0 -> 23  [275]}  { "_"   0 -> 23  [275]}  {  λ   0 -> 26  [326]}  { "\""   0 -> 29  [257]}  { "'"   0 -> 30  [257]}  { "`"   0 -> 31  [257]}  { "^"   0 -> 32  [257]}  { ")"   0 -> 33  [257]}  { "+"   0 -> 34  [257]}  { "-"   0 -> 35  [257]}  { "*"   0 -> 36  [257]}  { "<"   0 -> 37  [257]}  { ">"   0 -> 38  [257]}  { "/"   0 -> 39  [257]}  { "%"   0 -> 40  [257]}  { "|"   0 -> 41  [257]}  { ","   0 -> 42  [257]}  { "."   0 -> 43  [257]}  { "!"   0 -> 44  [257]}  { ":"   0 -> 45  [257]}  { "="   0 -> 46  [257]}  { " "   0 -> 47  [275]}  { "\t"   0 -> 47  [275]}  { "\n"   0 -> 47  [275]}  { "\f"   0 -> 47  [275]}  { "\r"   0 -> 47  [275]}  { DOT/uF8FA   0 -> 48  [292]}  { EOF/uF8FB   0 -> 49  [257]}  

  1[256]:         	 E:{ "="   1 ->  2  [257]}  

  2[256]:  T:0003 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:1


  3[256]:         	 E:{ "="   3 ->  4  [257]}  

  4[256]:  T:0001 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:2


  5[256]:         	 E:{ "="   5 ->  6  [257]}  

  6[256]:  T:0002 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:3


  7[256]:         	 E:{ "&"   7 ->  8  [257]}  

  8[256]:  T:0004 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:4


  9[256]:         	 E:{ "|"   9 -> 10  [257]}  

 10[256]:  T:0005 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:5


 11[256]:         	 E:{ "="  11 -> 12  [257]}  

 12[256]:  T:0010 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:6


 13[256]:         	 E:{ ">"  13 -> 14  [257]}  

 14[256]:  T:0010 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:7


 15[256]:         	 E:{ "{"  15 -> 16  [257]}  

 16[256]:  T:0006 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:3, MatchLength:2 ReplStr:-><-, PositionNumber:8


 17[256]:         	 E:{ "%"  17 -> 18  [257]}  

 18[256]:  T:0008 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:2, MatchLength:2 ReplStr:-><-, PositionNumber:9


 19[256]:         	 E:{ "}"  19 -> 20  [257]}  

 20[256]:  T:0009 	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:10


 21[256]:         	 E:{ "}"  21 -> 22  [257]}  

 22[256]:  T:0007 	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:11


 23[273]:         	 E:{ LOWER/uF8F6  23 -> 24  [275]}  { UPPER/uF8F7  23 -> 24  [275]}  { NUMERIC/uF8F5  23 -> 24  [275]}  { "_"  23 -> 24  [275]}  {  λ  23 -> 24  [318]}  

 24[273]:         	 E:{  λ  24 -> 23  [319]}  {  λ  24 -> 25  [321]}  

 25[320]:  T:0039 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:12


 26[229]:         	 E:{ NUMERIC/uF8F5  26 -> 27  [275]}  

 27[273]:         	 E:{  λ  27 -> 26  [327]}  {  λ  27 -> 28  [329]}  

 28[328]:  T:0041 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:13


 29[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:5, MatchLength:1 ReplStr:-><-, PositionNumber:14


 30[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:6, MatchLength:1 ReplStr:-><-, PositionNumber:15


 31[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:7, MatchLength:1 ReplStr:-><-, PositionNumber:16


 32[256]:  T:0020 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:17


 33[256]:  T:0013 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:19


 34[256]:  T:0014 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:20


 35[256]:  T:0015 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:21


 36[256]:  T:0016 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:22


 37[256]:  T:0017 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:23


 38[256]:  T:0018 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:24


 39[256]:  T:0019 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:25


 40[256]:  T:0027 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:26


 41[256]:  T:0024 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:27


 42[256]:  T:0021 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:28


 43[256]:  T:0022 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:29


 44[256]:  T:0023 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:30


 45[256]:  T:0025 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:31


 46[256]:  T:0026 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:32


 47[273]:  T:0040 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:33


 48[280]:         	 E:			NFA.Info: Action: (208) A_Pop|A_Warning(208), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:34


 49[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:35


BuildDFA_2: Nfa.Sigma ->	
 !"%&')*+,-./:<=>^_`{|}<-
Final NFA for ->S_VAR<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:  T:0012 	 E:{ "<"   0 ->  1  [257]}  { "="   0 ->  3  [257]}  { ">"   0 ->  5  [257]}  { "&"   0 ->  7  [257]}  { "|"   0 ->  9  [257]}  { "!"   0 -> 11  [257]}  { "<"   0 -> 13  [257]}  { "{"   0 -> 15  [257]}  { "{"   0 -> 17  [257]}  { "%"   0 -> 19  [257]}  { "}"   0 -> 21  [257]}  { LOWER/uF8F6   0 -> 23  [275]}  { UPPER/uF8F7   0 -> 23  [275]}  { "_"   0 -> 23  [275]}  {  λ   0 -> 26  [326]}  { "\""   0 -> 29  [257]}  { "'"   0 -> 30  [257]}  { "`"   0 -> 31  [257]}  { "^"   0 -> 32  [257]}  { ")"   0 -> 33  [257]}  { "+"   0 -> 34  [257]}  { "-"   0 -> 35  [257]}  { "*"   0 -> 36  [257]}  { "<"   0 -> 37  [257]}  { ">"   0 -> 38  [257]}  { "/"   0 -> 39  [257]}  { "%"   0 -> 40  [257]}  { "|"   0 -> 41  [257]}  { ","   0 -> 42  [257]}  { "."   0 -> 43  [257]}  { "!"   0 -> 44  [257]}  { ":"   0 -> 45  [257]}  { "="   0 -> 46  [257]}  { " "   0 -> 47  [275]}  { "\t"   0 -> 47  [275]}  { "\n"   0 -> 47  [275]}  { "\f"   0 -> 47  [275]}  { "\r"   0 -> 47  [275]}  { DOT/uF8FA   0 -> 48  [292]}  { EOF/uF8FB   0 -> 49  [257]}  { "\t"   0 -> 48  [468]}  { "\n"   0 -> 48  [468]}  { "\f"   0 -> 48  [468]}  { "\r"   0 -> 48  [468]}  { " "   0 -> 48  [468]}  { "!"   0 -> 48  [468]}  { "\""   0 -> 48  [468]}  { "%"   0 -> 48  [468]}  { "&"   0 -> 48  [468]}  { "'"   0 -> 48  [468]}  { ")"   0 -> 48  [468]}  { "*"   0 -> 48  [468]}  { "+"   0 -> 48  [468]}  { ","   0 -> 48  [468]}  { "-"   0 -> 48  [468]}  { "."   0 -> 48  [468]}  { "/"   0 -> 48  [468]}  { ":"   0 -> 48  [468]}  { "<"   0 -> 48  [468]}  { "="   0 -> 48  [468]}  { ">"   0 -> 48  [468]}  { "^"   0 -> 48  [468]}  { "_"   0 -> 48  [468]}  { "`"   0 -> 48  [468]}  { "{"   0 -> 48  [468]}  { "|"   0 -> 48  [468]}  { "}"   0 -> 48  [468]}  { NUMERIC/uF8F5   0 -> 48  [468]}  { LOWER/uF8F6   0 -> 48  [468]}  { UPPER/uF8F7   0 -> 48  [468]}  { EOF/uF8FB   0 -> 48  [468]}  

  1[256]:         	 E:{ "="   1 ->  2  [257]}  

  2[256]:  T:0003 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:1


  3[256]:         	 E:{ "="   3 ->  4  [257]}  

  4[256]:  T:0001 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:2


  5[256]:         	 E:{ "="   5 ->  6  [257]}  

  6[256]:  T:0002 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:3


  7[256]:         	 E:{ "&"   7 ->  8  [257]}  

  8[256]:  T:0004 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:4


  9[256]:         	 E:{ "|"   9 -> 10  [257]}  

 10[256]:  T:0005 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:5


 11[256]:         	 E:{ "="  11 -> 12  [257]}  

 12[256]:  T:0010 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:6


 13[256]:         	 E:{ ">"  13 -> 14  [257]}  

 14[256]:  T:0010 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:7


 15[256]:         	 E:{ "{"  15 -> 16  [257]}  

 16[256]:  T:0006 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:3, MatchLength:2 ReplStr:-><-, PositionNumber:8


 17[256]:         	 E:{ "%"  17 -> 18  [257]}  

 18[256]:  T:0008 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:2, MatchLength:2 ReplStr:-><-, PositionNumber:9


 19[256]:         	 E:{ "}"  19 -> 20  [257]}  

 20[256]:  T:0009 	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:10


 21[256]:         	 E:{ "}"  21 -> 22  [257]}  

 22[256]:  T:0007 	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-, PositionNumber:11


 23[273]:         	 E:{ LOWER/uF8F6  23 -> 24  [275]}  { UPPER/uF8F7  23 -> 24  [275]}  { NUMERIC/uF8F5  23 -> 24  [275]}  { "_"  23 -> 24  [275]}  {  λ  23 -> 24  [318]}  

 24[273]:         	 E:{  λ  24 -> 23  [319]}  {  λ  24 -> 25  [321]}  

 25[320]:  T:0039 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:12


 26[229]:         	 E:{ NUMERIC/uF8F5  26 -> 27  [275]}  

 27[273]:         	 E:{  λ  27 -> 26  [327]}  {  λ  27 -> 28  [329]}  

 28[328]:  T:0041 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:13


 29[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:5, MatchLength:1 ReplStr:-><-, PositionNumber:14


 30[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:6, MatchLength:1 ReplStr:-><-, PositionNumber:15


 31[256]:  T:0040 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:7, MatchLength:1 ReplStr:-><-, PositionNumber:16


 32[256]:  T:0020 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:17


 33[256]:  T:0013 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:19


 34[256]:  T:0014 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:20


 35[256]:  T:0015 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:21


 36[256]:  T:0016 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:22


 37[256]:  T:0017 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:23


 38[256]:  T:0018 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:24


 39[256]:  T:0019 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:25


 40[256]:  T:0027 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:26


 41[256]:  T:0024 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:27


 42[256]:  T:0021 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:28


 43[256]:  T:0022 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:29


 44[256]:  T:0023 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:30


 45[256]:  T:0025 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:31


 46[256]:  T:0026 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:32


 47[273]:  T:0040 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:33


 48[280]:         	 E:			NFA.Info: Action: (208) A_Pop|A_Warning(208), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:34


 49[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:35


Final DFA for ->S_VAR<-

---------------------------- DFA Output -----------------------------------------------

DFA InitState: 0, Sigma ->	
 !"%&')*+,-./:<=>^_`{|}<-

 St:     StateName     StateSet ✔              	Edges

  0:          0-26       [0,26] ✔ : T:0012 	 E:{ "\t"   0 ->  1  }  { "\n"   0 ->  1  }  { "\f"   0 ->  1  }  { "\r"   0 ->  1  }  { " "   0 ->  1  }  { "!"   0 ->  2  }  { "\""   0 ->  3  }  { "%"   0 ->  4  }  { "&"   0 ->  5  }  { "'"   0 ->  6  }  { ")"   0 ->  7  }  { "*"   0 ->  8  }  { "+"   0 ->  9  }  { ","   0 -> 10  }  { "-"   0 -> 11  }  { "."   0 -> 12  }  { "/"   0 -> 13  }  { ":"   0 -> 14  }  { "<"   0 -> 15  }  { "="   0 -> 16  }  { ">"   0 -> 17  }  { "^"   0 -> 18  }  { "_"   0 -> 19  }  { "`"   0 -> 20  }  { "{"   0 -> 21  }  { "|"   0 -> 22  }  { "}"   0 -> 23  }  { NUMERIC/uF8F5   0 -> 24  }  { LOWER/uF8F6   0 -> 19  }  { UPPER/uF8F7   0 -> 19  }  { DOT/uF8FA   0 -> 25  }  { EOF/uF8FB   0 -> 26  }  

  1:         47-48      [47,48] ✔ : T:0040 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  2:      11-44-48   [11,44,48] ✔ : T:0023 	 E:{ "="   2 -> 27  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  3:         29-48      [29,48] ✔ : T:0040 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:5, MatchLength:1 ReplStr:-><-

  4:      19-40-48   [19,40,48] ✔ : T:0027 	 E:{ "}"   4 -> 28  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  5:          7-48       [7,48] ✔ :        	 E:{ "&"   5 -> 29  }  

  6:         30-48      [30,48] ✔ : T:0040 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:6, MatchLength:1 ReplStr:-><-

  7:         33-48      [33,48] ✔ : T:0013 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  8:         36-48      [36,48] ✔ : T:0016 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  9:         34-48      [34,48] ✔ : T:0014 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 10:         42-48      [42,48] ✔ : T:0021 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 11:         35-48      [35,48] ✔ : T:0015 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 12:         43-48      [43,48] ✔ : T:0022 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 13:         39-48      [39,48] ✔ : T:0019 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 14:         45-48      [45,48] ✔ : T:0025 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 15:    1-13-37-48 [1,13,37,48] ✔ : T:0017 	 E:{ "="  15 -> 30  }  { ">"  15 -> 31  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 16:       3-46-48    [3,46,48] ✔ : T:0026 	 E:{ "="  16 -> 32  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 17:       5-38-48    [5,38,48] ✔ : T:0018 	 E:{ "="  17 -> 33  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 18:         32-48      [32,48] ✔ : T:0020 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 19:   23-24-25-48 [23,24,25,48] ✔ : T:0039 	 E:{ "_"  19 -> 34  }  { NUMERIC/uF8F5  19 -> 34  }  { LOWER/uF8F6  19 -> 34  }  { UPPER/uF8F7  19 -> 34  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 20:         31-48      [31,48] ✔ : T:0040 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:7, MatchLength:1 ReplStr:-><-

 21:      15-17-48   [15,17,48] ✔ :        	 E:{ "%"  21 -> 35  }  { "{"  21 -> 36  }  

 22:       9-41-48    [9,41,48] ✔ : T:0024 	 E:{ "|"  22 -> 37  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 23:         21-48      [21,48] ✔ :        	 E:{ "}"  23 -> 38  }  

 24:   26-27-28-48 [26,27,28,48] ✔ : T:0041 	 E:{ NUMERIC/uF8F5  24 -> 39  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 25:            48         [48] ✔ :        	 E:

 26:         48-49      [48,49] ✔ :        	 E:

 27:            12         [12] ✔ : T:0010 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 28:            20         [20] ✔ : T:0009 	 E:
			DFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-

 29:             8          [8] ✔ : T:0004 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 30:             2          [2] ✔ : T:0003 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 31:            14         [14] ✔ : T:0010 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 32:             4          [4] ✔ : T:0001 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 33:             6          [6] ✔ : T:0002 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 34:      23-24-25   [23,24,25] ✔ : T:0039 	 E:{ "_"  34 -> 34  }  { NUMERIC/uF8F5  34 -> 34  }  { LOWER/uF8F6  34 -> 34  }  { UPPER/uF8F7  34 -> 34  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

 35:            18         [18] ✔ : T:0008 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:2, MatchLength:2 ReplStr:-><-

 36:            16         [16] ✔ : T:0006 	 E:
			DFA.Info: Action: (04) A_Push(04), Ns:3, MatchLength:2 ReplStr:-><-

 37:            10         [10] ✔ : T:0005 	 E:
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:2 ReplStr:-><-

 38:            22         [22] ✔ : T:0007 	 E:
			DFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:2 ReplStr:-><-

 39:      26-27-28   [26,27,28] ✔ : T:0041 	 E:{ NUMERIC/uF8F5  39 -> 39  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

M= ->.<- Adding at  0 RE: .                              (Rv: 0, final=   0), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ".",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": ".",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 3,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "."
}

DumpParseNodes: As Passed [
	{
		"Item": ".",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 3,
		"Children": null
	}
]

ADDING AT  1 RE: <M_EOF>                        (Rv: 0, final=   0), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:498
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

BuildDFA_2: Nfa.Sigma Before Finialize-><-
NFA for (Before Finialize) ->S_Quote<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:         	 E:{ DOT/uF8FA   0 ->  1  [292]}  { EOF/uF8FB   0 ->  2  [257]}  

  1[280]:         	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:1


  2[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:2


BuildDFA_2: Nfa.Sigma -><-
Final NFA for ->S_Quote<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:         	 E:{ DOT/uF8FA   0 ->  1  [292]}  { EOF/uF8FB   0 ->  2  [257]}  { EOF/uF8FB   0 ->  1  [468]}  

  1[280]:         	 E:			NFA.Info: Action: (08) A_Pop(08), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:1


  2[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:2


Final DFA for ->S_Quote<-

---------------------------- DFA Output -----------------------------------------------

DFA InitState: 0, Sigma -><-

 St:     StateName     StateSet ✔              	Edges

  0:             0          [0] ✔ :        	 E:{ DOT/uF8FA   0 ->  1  }  { EOF/uF8FB   0 ->  2  }  

  1:             1          [1] ✔ :        	 E:

  2:           1-2        [1,2] ✔ :        	 E:

[31mError[0m from dot, exit status 1, File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:547
Output: 
M= ->\<- Adding at  0 RE: \                              (Rv:36, final=  36), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\\",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\\"
}

DumpParseNodes: As Passed [
	{
		"Item": "\\",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->.*"<- Adding at  1 RE: .*"                            (Rv:43, final=  43), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ".*\"",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "*",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 4,
				"Children": [
					{
						"Item": ".",
						"Mm": 0,
						"Nn": 0,
						"LR_Tok": 3,
						"Children": null
					}
				]
			},
			{
				"Item": "\"",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\"."
}

DumpParseNodes: As Passed [
	{
		"Item": "*",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 4,
		"Children": [
			{
				"Item": ".",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 3,
				"Children": null
			}
		]
	},
	{
		"Item": "\"",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

ADDING AT  2 RE: <M_EOF>                        (Rv: 0, final=   0), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:498
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

BuildDFA_2: Nfa.Sigma Before Finialize-><-
NFA for (Before Finialize) ->S_Str0<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:         	 E:{ "\\"   0 ->  1  [257]}  { DOT/uF8FA   0 ->  2  [292]}  {  λ   0 ->  2  [318]}  { EOF/uF8FB   0 ->  5  [257]}  

  1[256]:  T:0036 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:4, MatchLength:1 ReplStr:-><-, PositionNumber:1


  2[280]:         	 E:{  λ   2 ->  0  [319]}  {  λ   2 ->  3  [321]}  

  3[320]:         	 E:{ "\""   3 ->  4  [257]}  

  4[256]:  T:0043 	 E:			NFA.Info: Action: (88) A_Pop|A_NotGreedy(88), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:2


  5[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:3


BuildDFA_2: Nfa.Sigma ->"\<-
Final NFA for ->S_Str0<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:         	 E:{ "\\"   0 ->  1  [257]}  { DOT/uF8FA   0 ->  2  [292]}  {  λ   0 ->  2  [318]}  { EOF/uF8FB   0 ->  5  [257]}  { "\""   0 ->  2  [468]}  { "\\"   0 ->  2  [468]}  { EOF/uF8FB   0 ->  2  [468]}  

  1[256]:  T:0036 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:4, MatchLength:1 ReplStr:-><-, PositionNumber:1


  2[280]:         	 E:{  λ   2 ->  0  [319]}  {  λ   2 ->  3  [321]}  

  3[320]:         	 E:{ "\""   3 ->  4  [257]}  

  4[256]:  T:0043 	 E:			NFA.Info: Action: (88) A_Pop|A_NotGreedy(88), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:2


  5[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:3


Final DFA for ->S_Str0<-

---------------------------- DFA Output -----------------------------------------------

DFA InitState: 0, Sigma ->"\<-

 St:     StateName     StateSet ✔              	Edges

  0:         0-2-3      [0,2,3] ✔ :        	 E:{ "\""   0 ->  1  }  { "\\"   0 ->  2  }  { DOT/uF8FA   0 ->  0  }  { EOF/uF8FB   0 ->  3  }  

  1:       0-2-3-4    [0,2,3,4] ✔ : T:0043 	 E:{ "\""   1 ->  1  }  { "\\"   1 ->  2  }  { DOT/uF8FA   1 ->  0  }  { EOF/uF8FB   1 ->  3  }  
			DFA.Info: Action: (88) A_Pop|A_NotGreedy(88), Ns:0, MatchLength:1 ReplStr:-><-

  2:       0-1-2-3    [0,1,2,3] ✔ : T:0036 	 E:{ "\""   2 ->  1  }  { "\\"   2 ->  2  }  { DOT/uF8FA   2 ->  0  }  { EOF/uF8FB   2 ->  3  }  
			DFA.Info: Action: (04) A_Push(04), Ns:4, MatchLength:1 ReplStr:-><-

  3:       0-2-3-5    [0,2,3,5] ✔ :        	 E:{ "\""   3 ->  1  }  { "\\"   3 ->  2  }  { DOT/uF8FA   3 ->  0  }  { EOF/uF8FB   3 ->  3  }  

M= ->\<- Adding at  0 RE: \                              (Rv:36, final=  36), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "\\",
	"Pos": 1,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "\\",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "\\"
}

DumpParseNodes: As Passed [
	{
		"Item": "\\",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->.*'<- Adding at  1 RE: .*'                            (Rv:44, final=  44), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ".*'",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "*",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 4,
				"Children": [
					{
						"Item": ".",
						"Mm": 0,
						"Nn": 0,
						"LR_Tok": 3,
						"Children": null
					}
				]
			},
			{
				"Item": "'",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "'."
}

DumpParseNodes: As Passed [
	{
		"Item": "*",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 4,
		"Children": [
			{
				"Item": ".",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 3,
				"Children": null
			}
		]
	},
	{
		"Item": "'",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

ADDING AT  2 RE: <M_EOF>                        (Rv: 0, final=   0), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:498
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

BuildDFA_2: Nfa.Sigma Before Finialize-><-
NFA for (Before Finialize) ->S_Str1<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:         	 E:{ "\\"   0 ->  1  [257]}  { DOT/uF8FA   0 ->  2  [292]}  {  λ   0 ->  2  [318]}  { EOF/uF8FB   0 ->  5  [257]}  

  1[256]:  T:0036 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:4, MatchLength:1 ReplStr:-><-, PositionNumber:1


  2[280]:         	 E:{  λ   2 ->  0  [319]}  {  λ   2 ->  3  [321]}  

  3[320]:         	 E:{ "'"   3 ->  4  [257]}  

  4[256]:  T:0044 	 E:			NFA.Info: Action: (88) A_Pop|A_NotGreedy(88), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:2


  5[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:3


BuildDFA_2: Nfa.Sigma ->'\<-
Final NFA for ->S_Str1<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:         	 E:{ "\\"   0 ->  1  [257]}  { DOT/uF8FA   0 ->  2  [292]}  {  λ   0 ->  2  [318]}  { EOF/uF8FB   0 ->  5  [257]}  { "'"   0 ->  2  [468]}  { "\\"   0 ->  2  [468]}  { EOF/uF8FB   0 ->  2  [468]}  

  1[256]:  T:0036 	 E:			NFA.Info: Action: (04) A_Push(04), Ns:4, MatchLength:1 ReplStr:-><-, PositionNumber:1


  2[280]:         	 E:{  λ   2 ->  0  [319]}  {  λ   2 ->  3  [321]}  

  3[320]:         	 E:{ "'"   3 ->  4  [257]}  

  4[256]:  T:0044 	 E:			NFA.Info: Action: (88) A_Pop|A_NotGreedy(88), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:2


  5[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:3


Final DFA for ->S_Str1<-

---------------------------- DFA Output -----------------------------------------------

DFA InitState: 0, Sigma ->'\<-

 St:     StateName     StateSet ✔              	Edges

  0:         0-2-3      [0,2,3] ✔ :        	 E:{ "'"   0 ->  1  }  { "\\"   0 ->  2  }  { DOT/uF8FA   0 ->  0  }  { EOF/uF8FB   0 ->  3  }  

  1:       0-2-3-4    [0,2,3,4] ✔ : T:0044 	 E:{ "'"   1 ->  1  }  { "\\"   1 ->  2  }  { DOT/uF8FA   1 ->  0  }  { EOF/uF8FB   1 ->  3  }  
			DFA.Info: Action: (88) A_Pop|A_NotGreedy(88), Ns:0, MatchLength:1 ReplStr:-><-

  2:       0-1-2-3    [0,1,2,3] ✔ : T:0036 	 E:{ "'"   2 ->  1  }  { "\\"   2 ->  2  }  { DOT/uF8FA   2 ->  0  }  { EOF/uF8FB   2 ->  3  }  
			DFA.Info: Action: (04) A_Push(04), Ns:4, MatchLength:1 ReplStr:-><-

  3:       0-2-3-5    [0,2,3,5] ✔ :        	 E:{ "'"   3 ->  1  }  { "\\"   3 ->  2  }  { DOT/uF8FA   3 ->  0  }  { EOF/uF8FB   3 ->  3  }  

###################################### ww.Replace: ii=7 jj=0 ->"`"<-, File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:495
M= ->``<- Adding at  0 RE: ``                             (Rv: 0, final=9900), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "``",
	"Pos": 2,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "`",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			},
			{
				"Item": "`",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": "`"
}

DumpParseNodes: As Passed [
	{
		"Item": "`",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	},
	{
		"Item": "`",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

M= ->.*`<- Adding at  1 RE: .*`                            (Rv:43, final=  43), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:501
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": ".*`",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "*",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 4,
				"Children": [
					{
						"Item": ".",
						"Mm": 0,
						"Nn": 0,
						"LR_Tok": 3,
						"Children": null
					}
				]
			},
			{
				"Item": "`",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ".`"
}

DumpParseNodes: As Passed [
	{
		"Item": "*",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 4,
		"Children": [
			{
				"Item": ".",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 3,
				"Children": null
			}
		]
	},
	{
		"Item": "`",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

ADDING AT  2 RE: <M_EOF>                        (Rv: 0, final=   0), File: /Users/corwin/Projects/pongo2/lexie/dfa/match.go LineNo:498
DumpParseNodes: Pass 1 in AddReInfo {
	"Buf": "",
	"Pos": 3,
	"Tree": {
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 0,
		"Children": [
			{
				"Item": "",
				"Mm": 0,
				"Nn": 0,
				"LR_Tok": 1,
				"Children": null
			}
		]
	},
	"Error": null,
	"Sigma": ""
}

DumpParseNodes: As Passed [
	{
		"Item": "",
		"Mm": 0,
		"Nn": 0,
		"LR_Tok": 1,
		"Children": null
	}
]

BuildDFA_2: Nfa.Sigma Before Finialize-><-
NFA for (Before Finialize) ->S_Str2<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:         	 E:{ "`"   0 ->  1  [257]}  { DOT/uF8FA   0 ->  3  [292]}  {  λ   0 ->  3  [318]}  { EOF/uF8FB   0 ->  6  [257]}  

  1[256]:         	 E:{ "`"   1 ->  2  [257]}  

  2[256]:  T:9900 	 E:			NFA.Info: Action: (01) A_Repl(01), Ns:0, MatchLength:2 ReplStr:->"`"<-, PositionNumber:1


  3[280]:         	 E:{  λ   3 ->  0  [319]}  {  λ   3 ->  4  [321]}  

  4[320]:         	 E:{ "`"   4 ->  5  [257]}  

  5[256]:  T:0043 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:2


  6[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:3


BuildDFA_2: Nfa.Sigma ->`<-
Final NFA for ->S_Str2<-

-------------------------------------- Modified for New Rule Order -----------------------------------------

NFA InitState: 0

  0[488]:         	 E:{ "`"   0 ->  1  [257]}  { DOT/uF8FA   0 ->  3  [292]}  {  λ   0 ->  3  [318]}  { EOF/uF8FB   0 ->  6  [257]}  { "`"   0 ->  3  [468]}  { EOF/uF8FB   0 ->  3  [468]}  

  1[256]:         	 E:{ "`"   1 ->  2  [257]}  

  2[256]:  T:9900 	 E:			NFA.Info: Action: (01) A_Repl(01), Ns:0, MatchLength:2 ReplStr:->"`"<-, PositionNumber:1


  3[280]:         	 E:{  λ   3 ->  0  [319]}  {  λ   3 ->  4  [321]}  

  4[320]:         	 E:{ "`"   4 ->  5  [257]}  

  5[256]:  T:0043 	 E:			NFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-, PositionNumber:2


  6[256]:         	 E:			NFA.Info: Action: (142) A_EOF|A_Reset|A_Error(142), Ns:0, MatchLength:3 ReplStr:-><-, PositionNumber:3


Final DFA for ->S_Str2<-

---------------------------- DFA Output -----------------------------------------------

DFA InitState: 0, Sigma ->`<-

 St:     StateName     StateSet ✔              	Edges

  0:         0-3-4      [0,3,4] ✔ :        	 E:{ "`"   0 ->  1  }  { DOT/uF8FA   0 ->  0  }  { EOF/uF8FB   0 ->  2  }  

  1:     0-1-3-4-5  [0,1,3,4,5] ✔ : T:0043 	 E:{ "`"   1 ->  3  }  { DOT/uF8FA   1 ->  0  }  { EOF/uF8FB   1 ->  2  }  
			DFA.Info: Action: **No A Flag**(00), Ns:0, MatchLength:1 ReplStr:-><-

  2:       0-3-4-6    [0,3,4,6] ✔ :        	 E:{ "`"   2 ->  1  }  { DOT/uF8FA   2 ->  0  }  { EOF/uF8FB   2 ->  2  }  

  3:   0-1-2-3-4-5 [0,1,2,3,4,5] ✔ : T:9900 	 E:{ "`"   3 ->  3  }  { DOT/uF8FA   3 ->  0  }  { EOF/uF8FB   3 ->  2  }  
			DFA.Info: Action: (01) A_Repl(01), Ns:0, MatchLength:2 ReplStr:->"`"<-

Machine[0] =

Sigma = "%\\{\uf8fa\uf8fb"
InitState = 0
N_States = 7
Width = 6
SMap = {{{ smap.MinV = 37, smap.MaxV = 86, smap.Len = 6
smap.NoMap = f8fc (  ), smap.NoMapTo = 5
smap.M0 = (87 items)
     0: [   0 0x25     "%" ] = 0
     1: [   1 0x26     "&" ] = 5
     2: [   2 0x27     "'" ] = 5
     3: [   3 0x28     "(" ] = 5
     4: [   4 0x29     ")" ] = 5
     5: [   5 0x2a     "*" ] = 5
     6: [   6 0x2b     "+" ] = 5
     7: [   7 0x2c     "," ] = 5
     8: [   8 0x2d     "-" ] = 5
     9: [   9 0x2e     "." ] = 5
    10: [  10 0x2f     "/" ] = 5
    11: [  11 0x30     "0" ] = 5
    12: [  12 0x31     "1" ] = 5
    13: [  13 0x32     "2" ] = 5
    14: [  14 0x33     "3" ] = 5
    15: [  15 0x34     "4" ] = 5
    16: [  16 0x35     "5" ] = 5
    17: [  17 0x36     "6" ] = 5
    18: [  18 0x37     "7" ] = 5
    19: [  19 0x38     "8" ] = 5
    20: [  20 0x39     "9" ] = 5
    21: [  21 0x3a     ":" ] = 5
    22: [  22 0x3b     ";" ] = 5
    23: [  23 0x3c     "<" ] = 5
    24: [  24 0x3d     "=" ] = 5
    25: [  25 0x3e     ">" ] = 5
    26: [  26 0x3f     "?" ] = 5
    27: [  27 0x40     "@" ] = 5
    28: [  28 0x41     "A" ] = 5
    29: [  29 0x42     "B" ] = 5
    30: [  30 0x43     "C" ] = 5
    31: [  31 0x44     "D" ] = 5
    32: [  32 0x45     "E" ] = 5
    33: [  33 0x46     "F" ] = 5
    34: [  34 0x47     "G" ] = 5
    35: [  35 0x48     "H" ] = 5
    36: [  36 0x49     "I" ] = 5
    37: [  37 0x4a     "J" ] = 5
    38: [  38 0x4b     "K" ] = 5
    39: [  39 0x4c     "L" ] = 5
    40: [  40 0x4d     "M" ] = 5
    41: [  41 0x4e     "N" ] = 5
    42: [  42 0x4f     "O" ] = 5
    43: [  43 0x50     "P" ] = 5
    44: [  44 0x51     "Q" ] = 5
    45: [  45 0x52     "R" ] = 5
    46: [  46 0x53     "S" ] = 5
    47: [  47 0x54     "T" ] = 5
    48: [  48 0x55     "U" ] = 5
    49: [  49 0x56     "V" ] = 5
    50: [  50 0x57     "W" ] = 5
    51: [  51 0x58     "X" ] = 5
    52: [  52 0x59     "Y" ] = 5
    53: [  53 0x5a     "Z" ] = 5
    54: [  54 0x5b     "[" ] = 5
    55: [  55 0x5c    "\\" ] = 1
    56: [  56 0x5d     "]" ] = 5
    57: [  57 0x5e     "^" ] = 5
    58: [  58 0x5f     "_" ] = 5
    59: [  59 0x60     "`" ] = 5
    60: [  60 0x61     "a" ] = 5
    61: [  61 0x62     "b" ] = 5
    62: [  62 0x63     "c" ] = 5
    63: [  63 0x64     "d" ] = 5
    64: [  64 0x65     "e" ] = 5
    65: [  65 0x66     "f" ] = 5
    66: [  66 0x67     "g" ] = 5
    67: [  67 0x68     "h" ] = 5
    68: [  68 0x69     "i" ] = 5
    69: [  69 0x6a     "j" ] = 5
    70: [  70 0x6b     "k" ] = 5
    71: [  71 0x6c     "l" ] = 5
    72: [  72 0x6d     "m" ] = 5
    73: [  73 0x6e     "n" ] = 5
    74: [  74 0x6f     "o" ] = 5
    75: [  75 0x70     "p" ] = 5
    76: [  76 0x71     "q" ] = 5
    77: [  77 0x72     "r" ] = 5
    78: [  78 0x73     "s" ] = 5
    79: [  79 0x74     "t" ] = 5
    80: [  80 0x75     "u" ] = 5
    81: [  81 0x76     "v" ] = 5
    82: [  82 0x77     "w" ] = 5
    83: [  83 0x78     "x" ] = 5
    84: [  84 0x79     "y" ] = 5
    85: [  85 0x7a     "z" ] = 5
    86: [  86 0x7b     "{" ] = 2
smap.M1 = (3 items)
    : 3 X_DOT     \uF8FA 
    : 4 X_EOF     \uF8FB 
    : 5 X_else_CH \uF8FC 
}}}

State  : Rv   Actn  Hard  Next Leng    |     0    1    2    3    4    5
====== : ==== ----- ----- ---- ----    |    --   --   --   --   --   --
       :                               |     %    \    {            
====== : ==== ----- ----- ---- ----    |    --   --   --   --   --   --
m[  0] :   38       false    0    0    |     0    0    1    0    2    0
m[  1] : 9900     1 false    0    1    |     3    4    5    0    2    0
m[  2] :   38       false    0    0    |     0    0    1    0    2    0
m[  3] :    8     4  true    2    2    |     0    0    1    0    2    0
m[  4] : 9900     1 false    0    1    |     6    0    1    0    2    0
m[  5] :    6     4  true    3    2    |     3    4    5    0    2    0
m[  6] : 9900     1  true    0    3    |     0    0    1    0    2    0

Action Flags Are:
     1: (01) A_Repl
     4: (04) A_Push
Machine[1] =

Sigma = "\t\n\f\r !\"%&')*+,-./:<=>^_`{|}\uf8f5\uf8f6\uf8f7\uf8fa\uf8fb"
InitState = 0
N_States = 40
Width = 33
SMap = {{{ smap.MinV = 9, smap.MaxV = 116, smap.Len = 33
smap.NoMap = f8fc (  ), smap.NoMapTo = 32
smap.M0 = (117 items)
     0: [   0 0x9    "\t" ] = 0
     1: [   1 0xa    "\n" ] = 1
     2: [   2 0xb    "\v" ] = 32
     3: [   3 0xc    "\f" ] = 2
     4: [   4 0xd    "\r" ] = 3
     5: [   5 0xe  "\x0e" ] = 32
     6: [   6 0xf  "\x0f" ] = 32
     7: [   7 0x10  "\x10" ] = 32
     8: [   8 0x11  "\x11" ] = 32
     9: [   9 0x12  "\x12" ] = 32
    10: [  10 0x13  "\x13" ] = 32
    11: [  11 0x14  "\x14" ] = 32
    12: [  12 0x15  "\x15" ] = 32
    13: [  13 0x16  "\x16" ] = 32
    14: [  14 0x17  "\x17" ] = 32
    15: [  15 0x18  "\x18" ] = 32
    16: [  16 0x19  "\x19" ] = 32
    17: [  17 0x1a  "\x1a" ] = 32
    18: [  18 0x1b  "\x1b" ] = 32
    19: [  19 0x1c  "\x1c" ] = 32
    20: [  20 0x1d  "\x1d" ] = 32
    21: [  21 0x1e  "\x1e" ] = 32
    22: [  22 0x1f  "\x1f" ] = 32
    23: [  23 0x20     " " ] = 4
    24: [  24 0x21     "!" ] = 5
    25: [  25 0x22    "\"" ] = 6
    26: [  26 0x23     "#" ] = 32
    27: [  27 0x24     "$" ] = 32
    28: [  28 0x25     "%" ] = 7
    29: [  29 0x26     "&" ] = 8
    30: [  30 0x27     "'" ] = 9
    31: [  31 0x28     "(" ] = 32
    32: [  32 0x29     ")" ] = 10
    33: [  33 0x2a     "*" ] = 11
    34: [  34 0x2b     "+" ] = 12
    35: [  35 0x2c     "," ] = 13
    36: [  36 0x2d     "-" ] = 14
    37: [  37 0x2e     "." ] = 15
    38: [  38 0x2f     "/" ] = 16
    39: [  39 0x30     "0" ] = 32
    40: [  40 0x31     "1" ] = 32
    41: [  41 0x32     "2" ] = 32
    42: [  42 0x33     "3" ] = 32
    43: [  43 0x34     "4" ] = 32
    44: [  44 0x35     "5" ] = 32
    45: [  45 0x36     "6" ] = 32
    46: [  46 0x37     "7" ] = 32
    47: [  47 0x38     "8" ] = 32
    48: [  48 0x39     "9" ] = 32
    49: [  49 0x3a     ":" ] = 17
    50: [  50 0x3b     ";" ] = 32
    51: [  51 0x3c     "<" ] = 18
    52: [  52 0x3d     "=" ] = 19
    53: [  53 0x3e     ">" ] = 20
    54: [  54 0x3f     "?" ] = 32
    55: [  55 0x40     "@" ] = 32
    56: [  56 0x41     "A" ] = 32
    57: [  57 0x42     "B" ] = 32
    58: [  58 0x43     "C" ] = 32
    59: [  59 0x44     "D" ] = 32
    60: [  60 0x45     "E" ] = 32
    61: [  61 0x46     "F" ] = 32
    62: [  62 0x47     "G" ] = 32
    63: [  63 0x48     "H" ] = 32
    64: [  64 0x49     "I" ] = 32
    65: [  65 0x4a     "J" ] = 32
    66: [  66 0x4b     "K" ] = 32
    67: [  67 0x4c     "L" ] = 32
    68: [  68 0x4d     "M" ] = 32
    69: [  69 0x4e     "N" ] = 32
    70: [  70 0x4f     "O" ] = 32
    71: [  71 0x50     "P" ] = 32
    72: [  72 0x51     "Q" ] = 32
    73: [  73 0x52     "R" ] = 32
    74: [  74 0x53     "S" ] = 32
    75: [  75 0x54     "T" ] = 32
    76: [  76 0x55     "U" ] = 32
    77: [  77 0x56     "V" ] = 32
    78: [  78 0x57     "W" ] = 32
    79: [  79 0x58     "X" ] = 32
    80: [  80 0x59     "Y" ] = 32
    81: [  81 0x5a     "Z" ] = 32
    82: [  82 0x5b     "[" ] = 32
    83: [  83 0x5c    "\\" ] = 32
    84: [  84 0x5d     "]" ] = 32
    85: [  85 0x5e     "^" ] = 21
    86: [  86 0x5f     "_" ] = 22
    87: [  87 0x60     "`" ] = 23
    88: [  88 0x61     "a" ] = 32
    89: [  89 0x62     "b" ] = 32
    90: [  90 0x63     "c" ] = 32
    91: [  91 0x64     "d" ] = 32
    92: [  92 0x65     "e" ] = 32
    93: [  93 0x66     "f" ] = 32
    94: [  94 0x67     "g" ] = 32
    95: [  95 0x68     "h" ] = 32
    96: [  96 0x69     "i" ] = 32
    97: [  97 0x6a     "j" ] = 32
    98: [  98 0x6b     "k" ] = 32
    99: [  99 0x6c     "l" ] = 32
    100: [ 100 0x6d     "m" ] = 32
    101: [ 101 0x6e     "n" ] = 32
    102: [ 102 0x6f     "o" ] = 32
    103: [ 103 0x70     "p" ] = 32
    104: [ 104 0x71     "q" ] = 32
    105: [ 105 0x72     "r" ] = 32
    106: [ 106 0x73     "s" ] = 32
    107: [ 107 0x74     "t" ] = 32
    108: [ 108 0x75     "u" ] = 32
    109: [ 109 0x76     "v" ] = 32
    110: [ 110 0x77     "w" ] = 32
    111: [ 111 0x78     "x" ] = 32
    112: [ 112 0x79     "y" ] = 32
    113: [ 113 0x7a     "z" ] = 32
    114: [ 114 0x7b     "{" ] = 24
    115: [ 115 0x7c     "|" ] = 25
    116: [ 116 0x7d     "}" ] = 26
smap.M1 = (6 items)
    : 27 X_NUMERIC \uF8F5 
    : 28 X_LOWER   \uF8F6 
    : 29 X_UPPER   \uF8F7 
    : 30 X_DOT     \uF8FA 
    : 31 X_EOF     \uF8FB 
    : 32 X_else_CH \uF8FC 
}}}

State  : Rv   Actn  Hard  Next Leng    |     0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32
====== : ==== ----- ----- ---- ----    |    --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --
       :                               |    \t   \n   \f   \r         !    "    %    &    '    )    *    +    ,    -    .    /    :    <    =    >    ^    _    `    {    |    }                        
====== : ==== ----- ----- ---- ----    |    --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --
m[  0] :   12       false    0    0    |     1    1    1    1    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   19   19   25   26   25
m[  1] :   40        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  2] :   23        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   27    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  3] :   40     4  true    5    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  4] :   27        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   28    ☩    ☩    ☩    ☩    ☩    ☩
m[  5] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   29    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  6] :   40     4  true    6    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  7] :   13        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  8] :   16        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  9] :   14        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 10] :   21        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 11] :   15        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 12] :   22        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 13] :   19        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 14] :   25        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 15] :   17        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   30   31    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 16] :   26        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   32    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 17] :   18        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   33    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 18] :   20        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 19] :   39       false    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   34    ☩    ☩    ☩    ☩   34   34   34    ☩    ☩    ☩
m[ 20] :   40     4  true    7    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 21] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩   35    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   36    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 22] :   24        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   37    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 23] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   38    ☩    ☩    ☩    ☩    ☩    ☩
m[ 24] :   41        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   39    ☩    ☩    ☩    ☩    ☩
m[ 25] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 26] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 27] :   10        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 28] :    9     8  true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 29] :    4        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 30] :    3        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 31] :   10        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 32] :    1        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 33] :    2        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 34] :   39       false    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   34    ☩    ☩    ☩    ☩   34   34   34    ☩    ☩    ☩
m[ 35] :    8     4  true    2    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 36] :    6     4  true    3    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 37] :    5        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 38] :    7     8  true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 39] :   41        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   39    ☩    ☩    ☩    ☩    ☩

Action Flags Are:
     4: (04) A_Push
     8: (08) A_Pop
Machine[2] =

Sigma = "\t\n\f\r !\"%&')*+,-./:<=>^_`{|}\uf8f5\uf8f6\uf8f7\uf8fa\uf8fb"
InitState = 0
N_States = 40
Width = 33
SMap = {{{ smap.MinV = 9, smap.MaxV = 116, smap.Len = 33
smap.NoMap = f8fc (  ), smap.NoMapTo = 32
smap.M0 = (117 items)
     0: [   0 0x9    "\t" ] = 0
     1: [   1 0xa    "\n" ] = 1
     2: [   2 0xb    "\v" ] = 32
     3: [   3 0xc    "\f" ] = 2
     4: [   4 0xd    "\r" ] = 3
     5: [   5 0xe  "\x0e" ] = 32
     6: [   6 0xf  "\x0f" ] = 32
     7: [   7 0x10  "\x10" ] = 32
     8: [   8 0x11  "\x11" ] = 32
     9: [   9 0x12  "\x12" ] = 32
    10: [  10 0x13  "\x13" ] = 32
    11: [  11 0x14  "\x14" ] = 32
    12: [  12 0x15  "\x15" ] = 32
    13: [  13 0x16  "\x16" ] = 32
    14: [  14 0x17  "\x17" ] = 32
    15: [  15 0x18  "\x18" ] = 32
    16: [  16 0x19  "\x19" ] = 32
    17: [  17 0x1a  "\x1a" ] = 32
    18: [  18 0x1b  "\x1b" ] = 32
    19: [  19 0x1c  "\x1c" ] = 32
    20: [  20 0x1d  "\x1d" ] = 32
    21: [  21 0x1e  "\x1e" ] = 32
    22: [  22 0x1f  "\x1f" ] = 32
    23: [  23 0x20     " " ] = 4
    24: [  24 0x21     "!" ] = 5
    25: [  25 0x22    "\"" ] = 6
    26: [  26 0x23     "#" ] = 32
    27: [  27 0x24     "$" ] = 32
    28: [  28 0x25     "%" ] = 7
    29: [  29 0x26     "&" ] = 8
    30: [  30 0x27     "'" ] = 9
    31: [  31 0x28     "(" ] = 32
    32: [  32 0x29     ")" ] = 10
    33: [  33 0x2a     "*" ] = 11
    34: [  34 0x2b     "+" ] = 12
    35: [  35 0x2c     "," ] = 13
    36: [  36 0x2d     "-" ] = 14
    37: [  37 0x2e     "." ] = 15
    38: [  38 0x2f     "/" ] = 16
    39: [  39 0x30     "0" ] = 32
    40: [  40 0x31     "1" ] = 32
    41: [  41 0x32     "2" ] = 32
    42: [  42 0x33     "3" ] = 32
    43: [  43 0x34     "4" ] = 32
    44: [  44 0x35     "5" ] = 32
    45: [  45 0x36     "6" ] = 32
    46: [  46 0x37     "7" ] = 32
    47: [  47 0x38     "8" ] = 32
    48: [  48 0x39     "9" ] = 32
    49: [  49 0x3a     ":" ] = 17
    50: [  50 0x3b     ";" ] = 32
    51: [  51 0x3c     "<" ] = 18
    52: [  52 0x3d     "=" ] = 19
    53: [  53 0x3e     ">" ] = 20
    54: [  54 0x3f     "?" ] = 32
    55: [  55 0x40     "@" ] = 32
    56: [  56 0x41     "A" ] = 32
    57: [  57 0x42     "B" ] = 32
    58: [  58 0x43     "C" ] = 32
    59: [  59 0x44     "D" ] = 32
    60: [  60 0x45     "E" ] = 32
    61: [  61 0x46     "F" ] = 32
    62: [  62 0x47     "G" ] = 32
    63: [  63 0x48     "H" ] = 32
    64: [  64 0x49     "I" ] = 32
    65: [  65 0x4a     "J" ] = 32
    66: [  66 0x4b     "K" ] = 32
    67: [  67 0x4c     "L" ] = 32
    68: [  68 0x4d     "M" ] = 32
    69: [  69 0x4e     "N" ] = 32
    70: [  70 0x4f     "O" ] = 32
    71: [  71 0x50     "P" ] = 32
    72: [  72 0x51     "Q" ] = 32
    73: [  73 0x52     "R" ] = 32
    74: [  74 0x53     "S" ] = 32
    75: [  75 0x54     "T" ] = 32
    76: [  76 0x55     "U" ] = 32
    77: [  77 0x56     "V" ] = 32
    78: [  78 0x57     "W" ] = 32
    79: [  79 0x58     "X" ] = 32
    80: [  80 0x59     "Y" ] = 32
    81: [  81 0x5a     "Z" ] = 32
    82: [  82 0x5b     "[" ] = 32
    83: [  83 0x5c    "\\" ] = 32
    84: [  84 0x5d     "]" ] = 32
    85: [  85 0x5e     "^" ] = 21
    86: [  86 0x5f     "_" ] = 22
    87: [  87 0x60     "`" ] = 23
    88: [  88 0x61     "a" ] = 32
    89: [  89 0x62     "b" ] = 32
    90: [  90 0x63     "c" ] = 32
    91: [  91 0x64     "d" ] = 32
    92: [  92 0x65     "e" ] = 32
    93: [  93 0x66     "f" ] = 32
    94: [  94 0x67     "g" ] = 32
    95: [  95 0x68     "h" ] = 32
    96: [  96 0x69     "i" ] = 32
    97: [  97 0x6a     "j" ] = 32
    98: [  98 0x6b     "k" ] = 32
    99: [  99 0x6c     "l" ] = 32
    100: [ 100 0x6d     "m" ] = 32
    101: [ 101 0x6e     "n" ] = 32
    102: [ 102 0x6f     "o" ] = 32
    103: [ 103 0x70     "p" ] = 32
    104: [ 104 0x71     "q" ] = 32
    105: [ 105 0x72     "r" ] = 32
    106: [ 106 0x73     "s" ] = 32
    107: [ 107 0x74     "t" ] = 32
    108: [ 108 0x75     "u" ] = 32
    109: [ 109 0x76     "v" ] = 32
    110: [ 110 0x77     "w" ] = 32
    111: [ 111 0x78     "x" ] = 32
    112: [ 112 0x79     "y" ] = 32
    113: [ 113 0x7a     "z" ] = 32
    114: [ 114 0x7b     "{" ] = 24
    115: [ 115 0x7c     "|" ] = 25
    116: [ 116 0x7d     "}" ] = 26
smap.M1 = (6 items)
    : 27 X_NUMERIC \uF8F5 
    : 28 X_LOWER   \uF8F6 
    : 29 X_UPPER   \uF8F7 
    : 30 X_DOT     \uF8FA 
    : 31 X_EOF     \uF8FB 
    : 32 X_else_CH \uF8FC 
}}}

State  : Rv   Actn  Hard  Next Leng    |     0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32
====== : ==== ----- ----- ---- ----    |    --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --
       :                               |    \t   \n   \f   \r         !    "    %    &    '    )    *    +    ,    -    .    /    :    <    =    >    ^    _    `    {    |    }                        
====== : ==== ----- ----- ---- ----    |    --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --
m[  0] :   12       false    0    0    |     1    1    1    1    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   19   19   25   26   25
m[  1] :   40        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  2] :   23        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   27    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  3] :   40     4  true    5    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  4] :   27        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   28    ☩    ☩    ☩    ☩    ☩    ☩
m[  5] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   29    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  6] :   40     4  true    6    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  7] :   13        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  8] :   16        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  9] :   14        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 10] :   21        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 11] :   15        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 12] :   22        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 13] :   19        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 14] :   25        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 15] :   17        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   30   31    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 16] :   26        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   32    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 17] :   18        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   33    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 18] :   20        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 19] :   39       false    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   34    ☩    ☩    ☩    ☩   34   34   34    ☩    ☩    ☩
m[ 20] :   40     4  true    7    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 21] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩   35    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   36    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 22] :   24        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   37    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 23] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   38    ☩    ☩    ☩    ☩    ☩    ☩
m[ 24] :   41        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   39    ☩    ☩    ☩    ☩    ☩
m[ 25] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 26] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 27] :   10        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 28] :    9     8  true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 29] :    4        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 30] :    3        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 31] :   10        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 32] :    1        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 33] :    2        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 34] :   39       false    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   34    ☩    ☩    ☩    ☩   34   34   34    ☩    ☩    ☩
m[ 35] :    8     4  true    2    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 36] :    6     4  true    3    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 37] :    5        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 38] :    7     8  true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 39] :   41        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   39    ☩    ☩    ☩    ☩    ☩

Action Flags Are:
     4: (04) A_Push
     8: (08) A_Pop
Machine[3] =

Sigma = "\t\n\f\r !\"%&')*+,-./:<=>^_`{|}\uf8f5\uf8f6\uf8f7\uf8fa\uf8fb"
InitState = 0
N_States = 40
Width = 33
SMap = {{{ smap.MinV = 9, smap.MaxV = 116, smap.Len = 33
smap.NoMap = f8fc (  ), smap.NoMapTo = 32
smap.M0 = (117 items)
     0: [   0 0x9    "\t" ] = 0
     1: [   1 0xa    "\n" ] = 1
     2: [   2 0xb    "\v" ] = 32
     3: [   3 0xc    "\f" ] = 2
     4: [   4 0xd    "\r" ] = 3
     5: [   5 0xe  "\x0e" ] = 32
     6: [   6 0xf  "\x0f" ] = 32
     7: [   7 0x10  "\x10" ] = 32
     8: [   8 0x11  "\x11" ] = 32
     9: [   9 0x12  "\x12" ] = 32
    10: [  10 0x13  "\x13" ] = 32
    11: [  11 0x14  "\x14" ] = 32
    12: [  12 0x15  "\x15" ] = 32
    13: [  13 0x16  "\x16" ] = 32
    14: [  14 0x17  "\x17" ] = 32
    15: [  15 0x18  "\x18" ] = 32
    16: [  16 0x19  "\x19" ] = 32
    17: [  17 0x1a  "\x1a" ] = 32
    18: [  18 0x1b  "\x1b" ] = 32
    19: [  19 0x1c  "\x1c" ] = 32
    20: [  20 0x1d  "\x1d" ] = 32
    21: [  21 0x1e  "\x1e" ] = 32
    22: [  22 0x1f  "\x1f" ] = 32
    23: [  23 0x20     " " ] = 4
    24: [  24 0x21     "!" ] = 5
    25: [  25 0x22    "\"" ] = 6
    26: [  26 0x23     "#" ] = 32
    27: [  27 0x24     "$" ] = 32
    28: [  28 0x25     "%" ] = 7
    29: [  29 0x26     "&" ] = 8
    30: [  30 0x27     "'" ] = 9
    31: [  31 0x28     "(" ] = 32
    32: [  32 0x29     ")" ] = 10
    33: [  33 0x2a     "*" ] = 11
    34: [  34 0x2b     "+" ] = 12
    35: [  35 0x2c     "," ] = 13
    36: [  36 0x2d     "-" ] = 14
    37: [  37 0x2e     "." ] = 15
    38: [  38 0x2f     "/" ] = 16
    39: [  39 0x30     "0" ] = 32
    40: [  40 0x31     "1" ] = 32
    41: [  41 0x32     "2" ] = 32
    42: [  42 0x33     "3" ] = 32
    43: [  43 0x34     "4" ] = 32
    44: [  44 0x35     "5" ] = 32
    45: [  45 0x36     "6" ] = 32
    46: [  46 0x37     "7" ] = 32
    47: [  47 0x38     "8" ] = 32
    48: [  48 0x39     "9" ] = 32
    49: [  49 0x3a     ":" ] = 17
    50: [  50 0x3b     ";" ] = 32
    51: [  51 0x3c     "<" ] = 18
    52: [  52 0x3d     "=" ] = 19
    53: [  53 0x3e     ">" ] = 20
    54: [  54 0x3f     "?" ] = 32
    55: [  55 0x40     "@" ] = 32
    56: [  56 0x41     "A" ] = 32
    57: [  57 0x42     "B" ] = 32
    58: [  58 0x43     "C" ] = 32
    59: [  59 0x44     "D" ] = 32
    60: [  60 0x45     "E" ] = 32
    61: [  61 0x46     "F" ] = 32
    62: [  62 0x47     "G" ] = 32
    63: [  63 0x48     "H" ] = 32
    64: [  64 0x49     "I" ] = 32
    65: [  65 0x4a     "J" ] = 32
    66: [  66 0x4b     "K" ] = 32
    67: [  67 0x4c     "L" ] = 32
    68: [  68 0x4d     "M" ] = 32
    69: [  69 0x4e     "N" ] = 32
    70: [  70 0x4f     "O" ] = 32
    71: [  71 0x50     "P" ] = 32
    72: [  72 0x51     "Q" ] = 32
    73: [  73 0x52     "R" ] = 32
    74: [  74 0x53     "S" ] = 32
    75: [  75 0x54     "T" ] = 32
    76: [  76 0x55     "U" ] = 32
    77: [  77 0x56     "V" ] = 32
    78: [  78 0x57     "W" ] = 32
    79: [  79 0x58     "X" ] = 32
    80: [  80 0x59     "Y" ] = 32
    81: [  81 0x5a     "Z" ] = 32
    82: [  82 0x5b     "[" ] = 32
    83: [  83 0x5c    "\\" ] = 32
    84: [  84 0x5d     "]" ] = 32
    85: [  85 0x5e     "^" ] = 21
    86: [  86 0x5f     "_" ] = 22
    87: [  87 0x60     "`" ] = 23
    88: [  88 0x61     "a" ] = 32
    89: [  89 0x62     "b" ] = 32
    90: [  90 0x63     "c" ] = 32
    91: [  91 0x64     "d" ] = 32
    92: [  92 0x65     "e" ] = 32
    93: [  93 0x66     "f" ] = 32
    94: [  94 0x67     "g" ] = 32
    95: [  95 0x68     "h" ] = 32
    96: [  96 0x69     "i" ] = 32
    97: [  97 0x6a     "j" ] = 32
    98: [  98 0x6b     "k" ] = 32
    99: [  99 0x6c     "l" ] = 32
    100: [ 100 0x6d     "m" ] = 32
    101: [ 101 0x6e     "n" ] = 32
    102: [ 102 0x6f     "o" ] = 32
    103: [ 103 0x70     "p" ] = 32
    104: [ 104 0x71     "q" ] = 32
    105: [ 105 0x72     "r" ] = 32
    106: [ 106 0x73     "s" ] = 32
    107: [ 107 0x74     "t" ] = 32
    108: [ 108 0x75     "u" ] = 32
    109: [ 109 0x76     "v" ] = 32
    110: [ 110 0x77     "w" ] = 32
    111: [ 111 0x78     "x" ] = 32
    112: [ 112 0x79     "y" ] = 32
    113: [ 113 0x7a     "z" ] = 32
    114: [ 114 0x7b     "{" ] = 24
    115: [ 115 0x7c     "|" ] = 25
    116: [ 116 0x7d     "}" ] = 26
smap.M1 = (6 items)
    : 27 X_NUMERIC \uF8F5 
    : 28 X_LOWER   \uF8F6 
    : 29 X_UPPER   \uF8F7 
    : 30 X_DOT     \uF8FA 
    : 31 X_EOF     \uF8FB 
    : 32 X_else_CH \uF8FC 
}}}

State  : Rv   Actn  Hard  Next Leng    |     0    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   25   26   27   28   29   30   31   32
====== : ==== ----- ----- ---- ----    |    --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --
       :                               |    \t   \n   \f   \r         !    "    %    &    '    )    *    +    ,    -    .    /    :    <    =    >    ^    _    `    {    |    }                        
====== : ==== ----- ----- ---- ----    |    --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --   --
m[  0] :   12       false    0    0    |     1    1    1    1    1    2    3    4    5    6    7    8    9   10   11   12   13   14   15   16   17   18   19   20   21   22   23   24   19   19   25   26   25
m[  1] :   40        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  2] :   23        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   27    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  3] :   40     4  true    5    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  4] :   27        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   28    ☩    ☩    ☩    ☩    ☩    ☩
m[  5] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   29    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  6] :   40     4  true    6    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  7] :   13        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  8] :   16        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[  9] :   14        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 10] :   21        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 11] :   15        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 12] :   22        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 13] :   19        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 14] :   25        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 15] :   17        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   30   31    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 16] :   26        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   32    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 17] :   18        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   33    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 18] :   20        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 19] :   39       false    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   34    ☩    ☩    ☩    ☩   34   34   34    ☩    ☩    ☩
m[ 20] :   40     4  true    7    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 21] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩   35    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   36    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 22] :   24        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   37    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 23] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   38    ☩    ☩    ☩    ☩    ☩    ☩
m[ 24] :   41        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   39    ☩    ☩    ☩    ☩    ☩
m[ 25] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 26] :    0       false    0    0    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 27] :   10        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 28] :    9     8  true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 29] :    4        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 30] :    3        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 31] :   10        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 32] :    1        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 33] :    2        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 34] :   39       false    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   34    ☩    ☩    ☩    ☩   34   34   34    ☩    ☩    ☩
m[ 35] :    8     4  true    2    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 36] :    6     4  true    3    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 37] :    5        true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 38] :    7     8  true    0    2    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩
m[ 39] :   41        true    0    1    |     ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩    ☩   39    ☩    ☩    ☩    ☩    ☩

Action Flags Are:
     4: (04) A_Push
     8: (08) A_Pop
Machine[4] =

Sigma = "\uf8fa\uf8fb"
InitState = 0
N_States = 3
Width = 3
SMap = {{{ smap.MinV = 63738, smap.MaxV = -63738, smap.Len = 3
smap.NoMap = f8fc (  ), smap.NoMapTo = 2
smap.M0 = (1 items)
     0: [   0 0xf8fa "\uf8fa" ] = 2
smap.M1 = (3 items)
    : 0 X_DOT     \uF8FA 
    : 1 X_EOF     \uF8FB 
    : 2 X_else_CH \uF8FC 
}}}

State  : Rv   Actn  Hard  Next Leng    |     0    1    2
====== : ==== ----- ----- ---- ----    |    --   --   --
       :                               |             
====== : ==== ----- ----- ---- ----    |    --   --   --
m[  0] :    0       false    0    0    |     1    2    1
m[  1] :    0       false    0    0    |     ☩    ☩    ☩
m[  2] :    0       false    0    0    |     ☩    ☩    ☩

Action Flags Are:
Machine[5] =

Sigma = "\"\\\uf8fa\uf8fb"
InitState = 0
N_States = 4
Width = 5
SMap = {{{ smap.MinV = 34, smap.MaxV = 58, smap.Len = 5
smap.NoMap = f8fc (  ), smap.NoMapTo = 4
smap.M0 = (59 items)
     0: [   0 0x22    "\"" ] = 0
     1: [   1 0x23     "#" ] = 4
     2: [   2 0x24     "$" ] = 4
     3: [   3 0x25     "%" ] = 4
     4: [   4 0x26     "&" ] = 4
     5: [   5 0x27     "'" ] = 4
     6: [   6 0x28     "(" ] = 4
     7: [   7 0x29     ")" ] = 4
     8: [   8 0x2a     "*" ] = 4
     9: [   9 0x2b     "+" ] = 4
    10: [  10 0x2c     "," ] = 4
    11: [  11 0x2d     "-" ] = 4
    12: [  12 0x2e     "." ] = 4
    13: [  13 0x2f     "/" ] = 4
    14: [  14 0x30     "0" ] = 4
    15: [  15 0x31     "1" ] = 4
    16: [  16 0x32     "2" ] = 4
    17: [  17 0x33     "3" ] = 4
    18: [  18 0x34     "4" ] = 4
    19: [  19 0x35     "5" ] = 4
    20: [  20 0x36     "6" ] = 4
    21: [  21 0x37     "7" ] = 4
    22: [  22 0x38     "8" ] = 4
    23: [  23 0x39     "9" ] = 4
    24: [  24 0x3a     ":" ] = 4
    25: [  25 0x3b     ";" ] = 4
    26: [  26 0x3c     "<" ] = 4
    27: [  27 0x3d     "=" ] = 4
    28: [  28 0x3e     ">" ] = 4
    29: [  29 0x3f     "?" ] = 4
    30: [  30 0x40     "@" ] = 4
    31: [  31 0x41     "A" ] = 4
    32: [  32 0x42     "B" ] = 4
    33: [  33 0x43     "C" ] = 4
    34: [  34 0x44     "D" ] = 4
    35: [  35 0x45     "E" ] = 4
    36: [  36 0x46     "F" ] = 4
    37: [  37 0x47     "G" ] = 4
    38: [  38 0x48     "H" ] = 4
    39: [  39 0x49     "I" ] = 4
    40: [  40 0x4a     "J" ] = 4
    41: [  41 0x4b     "K" ] = 4
    42: [  42 0x4c     "L" ] = 4
    43: [  43 0x4d     "M" ] = 4
    44: [  44 0x4e     "N" ] = 4
    45: [  45 0x4f     "O" ] = 4
    46: [  46 0x50     "P" ] = 4
    47: [  47 0x51     "Q" ] = 4
    48: [  48 0x52     "R" ] = 4
    49: [  49 0x53     "S" ] = 4
    50: [  50 0x54     "T" ] = 4
    51: [  51 0x55     "U" ] = 4
    52: [  52 0x56     "V" ] = 4
    53: [  53 0x57     "W" ] = 4
    54: [  54 0x58     "X" ] = 4
    55: [  55 0x59     "Y" ] = 4
    56: [  56 0x5a     "Z" ] = 4
    57: [  57 0x5b     "[" ] = 4
    58: [  58 0x5c    "\\" ] = 1
smap.M1 = (3 items)
    : 2 X_DOT     \uF8FA 
    : 3 X_EOF     \uF8FB 
    : 4 X_else_CH \uF8FC 
}}}

State  : Rv   Actn  Hard  Next Leng    |     0    1    2    3    4
====== : ==== ----- ----- ---- ----    |    --   --   --   --   --
       :                               |     "    \            
====== : ==== ----- ----- ---- ----    |    --   --   --   --   --
m[  0] :    0       false    0    0    |     1    2    0    3    0
m[  1] :   43    88  true    0    1    |     1    2    0    3    0
m[  2] :   36     4  true    4    1    |     1    2    0    3    0
m[  3] :    0       false    0    0    |     1    2    0    3    0

Action Flags Are:
    88: (88) A_Pop|A_NotGreedy
     4: (04) A_Push
Machine[6] =

Sigma = "'\\\uf8fa\uf8fb"
InitState = 0
N_States = 4
Width = 5
SMap = {{{ smap.MinV = 39, smap.MaxV = 53, smap.Len = 5
smap.NoMap = f8fc (  ), smap.NoMapTo = 4
smap.M0 = (54 items)
     0: [   0 0x27     "'" ] = 0
     1: [   1 0x28     "(" ] = 4
     2: [   2 0x29     ")" ] = 4
     3: [   3 0x2a     "*" ] = 4
     4: [   4 0x2b     "+" ] = 4
     5: [   5 0x2c     "," ] = 4
     6: [   6 0x2d     "-" ] = 4
     7: [   7 0x2e     "." ] = 4
     8: [   8 0x2f     "/" ] = 4
     9: [   9 0x30     "0" ] = 4
    10: [  10 0x31     "1" ] = 4
    11: [  11 0x32     "2" ] = 4
    12: [  12 0x33     "3" ] = 4
    13: [  13 0x34     "4" ] = 4
    14: [  14 0x35     "5" ] = 4
    15: [  15 0x36     "6" ] = 4
    16: [  16 0x37     "7" ] = 4
    17: [  17 0x38     "8" ] = 4
    18: [  18 0x39     "9" ] = 4
    19: [  19 0x3a     ":" ] = 4
    20: [  20 0x3b     ";" ] = 4
    21: [  21 0x3c     "<" ] = 4
    22: [  22 0x3d     "=" ] = 4
    23: [  23 0x3e     ">" ] = 4
    24: [  24 0x3f     "?" ] = 4
    25: [  25 0x40     "@" ] = 4
    26: [  26 0x41     "A" ] = 4
    27: [  27 0x42     "B" ] = 4
    28: [  28 0x43     "C" ] = 4
    29: [  29 0x44     "D" ] = 4
    30: [  30 0x45     "E" ] = 4
    31: [  31 0x46     "F" ] = 4
    32: [  32 0x47     "G" ] = 4
    33: [  33 0x48     "H" ] = 4
    34: [  34 0x49     "I" ] = 4
    35: [  35 0x4a     "J" ] = 4
    36: [  36 0x4b     "K" ] = 4
    37: [  37 0x4c     "L" ] = 4
    38: [  38 0x4d     "M" ] = 4
    39: [  39 0x4e     "N" ] = 4
    40: [  40 0x4f     "O" ] = 4
    41: [  41 0x50     "P" ] = 4
    42: [  42 0x51     "Q" ] = 4
    43: [  43 0x52     "R" ] = 4
    44: [  44 0x53     "S" ] = 4
    45: [  45 0x54     "T" ] = 4
    46: [  46 0x55     "U" ] = 4
    47: [  47 0x56     "V" ] = 4
    48: [  48 0x57     "W" ] = 4
    49: [  49 0x58     "X" ] = 4
    50: [  50 0x59     "Y" ] = 4
    51: [  51 0x5a     "Z" ] = 4
    52: [  52 0x5b     "[" ] = 4
    53: [  53 0x5c    "\\" ] = 1
smap.M1 = (3 items)
    : 2 X_DOT     \uF8FA 
    : 3 X_EOF     \uF8FB 
    : 4 X_else_CH \uF8FC 
}}}

State  : Rv   Actn  Hard  Next Leng    |     0    1    2    3    4
====== : ==== ----- ----- ---- ----    |    --   --   --   --   --
       :                               |     '    \            
====== : ==== ----- ----- ---- ----    |    --   --   --   --   --
m[  0] :    0       false    0    0    |     1    2    0    3    0
m[  1] :   44    88  true    0    1    |     1    2    0    3    0
m[  2] :   36     4  true    4    1    |     1    2    0    3    0
m[  3] :    0       false    0    0    |     1    2    0    3    0

Action Flags Are:
    88: (88) A_Pop|A_NotGreedy
     4: (04) A_Push
Machine[7] =

Sigma = "`\uf8fa\uf8fb"
InitState = 0
N_States = 4
Width = 4
SMap = {{{ smap.MinV = 96, smap.MaxV = 0, smap.Len = 4
smap.NoMap = f8fc (  ), smap.NoMapTo = 3
smap.M0 = (1 items)
     0: [   0 0x60     "`" ] = 0
smap.M1 = (3 items)
    : 1 X_DOT     \uF8FA 
    : 2 X_EOF     \uF8FB 
    : 3 X_else_CH \uF8FC 
}}}

State  : Rv   Actn  Hard  Next Leng    |     0    1    2    3
====== : ==== ----- ----- ---- ----    |    --   --   --   --
       :                               |     `            
====== : ==== ----- ----- ---- ----    |    --   --   --   --
m[  0] :    0       false    0    0    |     1    0    2    0
m[  1] :   43        true    0    1    |     3    0    2    0
m[  2] :    0       false    0    0    |     1    0    2    0
m[  3] : 9900     1  true    0    2    |     3    0    2    0

Action Flags Are:
     1: (01) A_Repl
SetTokenStart: Line:1 Col:1

Top: st:0, ctx.St:0, in macine S_Init
 Successful match, got 38 SMatch=-><-, Action: 0, Rv:38
SetTokenStart: Line:1 Col:1
if hard test, st=0, hard=false
 (peek) ii=2 for rune rn=->{<-
 ii=2 for rune rn=->{<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine S_Init
 Successful match, got 9900 SMatch=->{<-, Action: 1, Rv:9900
if hard test, st=1, hard=false
 (peek) ii=2 for rune rn=->{<-
 ii=2 for rune rn=->{<-
 next state = 5
 match moving to new state, to=5

Top: st:5, ctx.St:5, in macine S_Init
 Successful match, got 6 SMatch=->{{<-, Action: 4, Rv:6

-------------------------------------------------------------------------------
Found a PUSH: to 3 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 3
Before Flush, xx=1, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0     0     1    1    38   1/   1   1/   1 -->><<--
	  1     1     2    1  9900   1/   1   1/   2 -->>{<<--
	  2     1     3    1     6   1/   1   1/   3 -->>{{<<--

	EndIdx = 1 -> 0
	EndIdx = 2 -> 1
	EndIdx = 3 -> 2
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=3
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=6 for rune rn=->"<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0     3     4    1    40   1/   1   1/   4 -->> <<--

	EndIdx = 4 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
--------------------------------------------------------
 ii=6 for rune rn=->"<-
 next state = 3
 match moving to new state, to=3

Top: st:3, ctx.St:3, in macine ns=3
 Successful match, got 40 SMatch=->"<-, Action: 4, Rv:40

-------------------------------------------------------------------------------
Found a PUSH: to 5 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 5
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0     4     5    1    40   1/   1   1/   5 -->>"<<--

	EndIdx = 5 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
--------------------------------------------------------
 ii=4 for rune rn=-><<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->c<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->r<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->i<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->p<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->t<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->><-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->a<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->l<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->e<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->r<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->t<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->(<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->'<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->x<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->'<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->)<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->;<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=-><<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->/<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->c<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->r<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->i<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->p<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->t<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->><-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=0 for rune rn=->"<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=5
 Successful match, got 43 SMatch=-><script>alert('xss');</script>"<-, Action:88, Rv:43

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    35    36    1    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--

	EndIdx = 36 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=26 for rune rn=->}<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    36    37    1    40   1/   1   1/   6 -->> <<--

	EndIdx = 37 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
--------------------------------------------------------
 ii=26 for rune rn=->}<-
 next state = 23
 match moving to new state, to=23

Top: st:23, ctx.St:23, in macine Popped!
 ii=26 for rune rn=->}<-
 next state = 38
 match moving to new state, to=38

Top: st:38, ctx.St:38, in macine Popped!
 Successful match, got 7 SMatch=->}}<-, Action: 8, Rv:7

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    37    39    1     7   1/   1   1/   8 -->>}}<<--

	EndIdx = 39 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
--------------------------------------------------------
 ii=1 for rune rn=->
<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=->
<-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=24 for rune rn=->{<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    39    40    1    40   1/   1   2/   1 -->>
<<--

	EndIdx = 40 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
--------------------------------------------------------
 ii=24 for rune rn=->{<-
 next state = 21
 match moving to new state, to=21

Top: st:21, ctx.St:21, in macine Popped!
 ii=7 for rune rn=->%<-
 next state = 35
 match moving to new state, to=35

Top: st:35, ctx.St:35, in macine Popped!
 Successful match, got 8 SMatch=->{%<-, Action: 4, Rv:8

-------------------------------------------------------------------------------
Found a PUSH: to 2 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 2
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    40    42    1     8   1/   1   2/   3 -->>{%<<--

	EndIdx = 42 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=28 for rune rn=->a<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    42    43    1    40   1/   1   2/   4 -->> <<--

	EndIdx = 43 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
--------------------------------------------------------
 ii=28 for rune rn=->a<-
 next state = 19
 match moving to new state, to=19

Top: st:19, ctx.St:19, in macine ns=2
 Successful match, got 39 SMatch=->a<-, Action: 0, Rv:39
if hard test, st=19, hard=false
 (peek) ii=28 for rune rn=->u<-
 ii=28 for rune rn=->u<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->au<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->t<-
 ii=28 for rune rn=->t<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->aut<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->o<-
 ii=28 for rune rn=->o<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->auto<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoe<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->s<-
 ii=28 for rune rn=->s<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoes<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->c<-
 ii=28 for rune rn=->c<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoesc<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->a<-
 ii=28 for rune rn=->a<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoesca<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->p<-
 ii=28 for rune rn=->p<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoescap<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoescape<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=4 for rune rn=-> <-
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=28 for rune rn=->o<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    53    54    1    40   1/   1   2/  15 -->> <<--

	EndIdx = 54 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
--------------------------------------------------------
 ii=28 for rune rn=->o<-
 next state = 19
 match moving to new state, to=19

Top: st:19, ctx.St:19, in macine ns=2
 Successful match, got 39 SMatch=->o<-, Action: 0, Rv:39
if hard test, st=19, hard=false
 (peek) ii=28 for rune rn=->f<-
 ii=28 for rune rn=->f<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->of<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->f<-
 ii=28 for rune rn=->f<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->off<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=4 for rune rn=-> <-
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=7 for rune rn=->%<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    57    58    1    40   1/   1   2/  19 -->> <<--

	EndIdx = 58 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
--------------------------------------------------------
 ii=7 for rune rn=->%<-
 next state = 4
 match moving to new state, to=4

Top: st:4, ctx.St:4, in macine ns=2
 Successful match, got 27 SMatch=->%<-, Action: 0, Rv:27
if hard test, st=4, hard=true
 (peek) ii=26 for rune rn=->}<-
 ii=26 for rune rn=->}<-
 next state = 28
 match moving to new state, to=28

Top: st:28, ctx.St:28, in macine ns=2
 Successful match, got 9 SMatch=->%}<-, Action: 8, Rv:9

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=1, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    58    59    1    27   1/   1   2/  20 -->>%<<--
	  1    58    60    1     9   1/   1   2/  21 -->>%}<<--

	EndIdx = 59 -> 0
	EndIdx = 60 -> 1
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
Failed to flush - invalid token set, ii=0, end=58, File: /Users/corwin/Projects/pongo2/lexie/tok/tok.go LineNo:128
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
--------------------------------------------------------
 ii=1 for rune rn=->
<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=->
<-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=24 for rune rn=->{<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    60    61    1    40   1/   1   3/   1 -->>
<<--

	EndIdx = 61 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
--------------------------------------------------------
 ii=24 for rune rn=->{<-
 next state = 21
 match moving to new state, to=21

Top: st:21, ctx.St:21, in macine Popped!
 ii=24 for rune rn=->{<-
 next state = 36
 match moving to new state, to=36

Top: st:36, ctx.St:36, in macine Popped!
 Successful match, got 6 SMatch=->{{<-, Action: 4, Rv:6

-------------------------------------------------------------------------------
Found a PUSH: to 3 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 3
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    61    63    1     6   1/   1   3/   3 -->>{{<<--

	EndIdx = 63 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=3
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=6 for rune rn=->"<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    63    64    1    40   1/   1   3/   4 -->> <<--

	EndIdx = 64 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
--------------------------------------------------------
 ii=6 for rune rn=->"<-
 next state = 3
 match moving to new state, to=3

Top: st:3, ctx.St:3, in macine ns=3
 Successful match, got 40 SMatch=->"<-, Action: 4, Rv:40

-------------------------------------------------------------------------------
Found a PUSH: to 5 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 5
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    64    65    1    40   1/   1   3/   5 -->>"<<--

	EndIdx = 65 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
--------------------------------------------------------
 ii=4 for rune rn=-><<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->c<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->r<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->i<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->p<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->t<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->><-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->a<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->l<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->e<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->r<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->t<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->(<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->'<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->x<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->'<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->)<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->;<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=-><<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->/<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->c<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->r<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->i<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->p<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->t<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->><-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=0 for rune rn=->"<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=5
 Successful match, got 43 SMatch=-><script>alert('xss');</script>"<-, Action:88, Rv:43

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    95    96    1    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--

	EndIdx = 96 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=26 for rune rn=->}<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    96    97    1    40   1/   1   3/   6 -->> <<--

	EndIdx = 97 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
--------------------------------------------------------
 ii=26 for rune rn=->}<-
 next state = 23
 match moving to new state, to=23

Top: st:23, ctx.St:23, in macine Popped!
 ii=26 for rune rn=->}<-
 next state = 38
 match moving to new state, to=38

Top: st:38, ctx.St:38, in macine Popped!
 Successful match, got 7 SMatch=->}}<-, Action: 8, Rv:7

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    97    99    1     7   1/   1   3/   8 -->>}}<<--

	EndIdx = 99 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
--------------------------------------------------------
 ii=1 for rune rn=->
<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=->
<-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=24 for rune rn=->{<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0    99   100    1    40   1/   1   4/   1 -->>
<<--

	EndIdx = 100 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
--------------------------------------------------------
 ii=24 for rune rn=->{<-
 next state = 21
 match moving to new state, to=21

Top: st:21, ctx.St:21, in macine Popped!
 ii=7 for rune rn=->%<-
 next state = 35
 match moving to new state, to=35

Top: st:35, ctx.St:35, in macine Popped!
 Successful match, got 8 SMatch=->{%<-, Action: 4, Rv:8

-------------------------------------------------------------------------------
Found a PUSH: to 2 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 2
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   100   102    1     8   1/   1   4/   3 -->>{%<<--

	EndIdx = 102 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=28 for rune rn=->e<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   102   103    1    40   1/   1   4/   4 -->> <<--

	EndIdx = 103 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
--------------------------------------------------------
 ii=28 for rune rn=->e<-
 next state = 19
 match moving to new state, to=19

Top: st:19, ctx.St:19, in macine ns=2
 Successful match, got 39 SMatch=->e<-, Action: 0, Rv:39
if hard test, st=19, hard=false
 (peek) ii=28 for rune rn=->n<-
 ii=28 for rune rn=->n<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->en<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->d<-
 ii=28 for rune rn=->d<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->end<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->a<-
 ii=28 for rune rn=->a<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->enda<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->u<-
 ii=28 for rune rn=->u<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endau<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->t<-
 ii=28 for rune rn=->t<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endaut<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->o<-
 ii=28 for rune rn=->o<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endauto<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoe<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->s<-
 ii=28 for rune rn=->s<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoes<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->c<-
 ii=28 for rune rn=->c<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoesc<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->a<-
 ii=28 for rune rn=->a<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoesca<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->p<-
 ii=28 for rune rn=->p<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoescap<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoescape<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=4 for rune rn=-> <-
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=7 for rune rn=->%<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   116   117    1    40   1/   1   4/  18 -->> <<--

	EndIdx = 117 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
--------------------------------------------------------
 ii=7 for rune rn=->%<-
 next state = 4
 match moving to new state, to=4

Top: st:4, ctx.St:4, in macine ns=2
 Successful match, got 27 SMatch=->%<-, Action: 0, Rv:27
if hard test, st=4, hard=true
 (peek) ii=26 for rune rn=->}<-
 ii=26 for rune rn=->}<-
 next state = 28
 match moving to new state, to=28

Top: st:28, ctx.St:28, in macine ns=2
 Successful match, got 9 SMatch=->%}<-, Action: 8, Rv:9

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=1, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   117   118    1    27   1/   1   4/  19 -->>%<<--
	  1   117   119    1     9   1/   1   4/  20 -->>%}<<--

	EndIdx = 118 -> 0
	EndIdx = 119 -> 1
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
Failed to flush - invalid token set, ii=0, end=117, File: /Users/corwin/Projects/pongo2/lexie/tok/tok.go LineNo:128
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
--------------------------------------------------------
 ii=1 for rune rn=->
<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=->
<-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=24 for rune rn=->{<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   119   120    1    40   1/   1   5/   1 -->>
<<--

	EndIdx = 120 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
--------------------------------------------------------
 ii=24 for rune rn=->{<-
 next state = 21
 match moving to new state, to=21

Top: st:21, ctx.St:21, in macine Popped!
 ii=7 for rune rn=->%<-
 next state = 35
 match moving to new state, to=35

Top: st:35, ctx.St:35, in macine Popped!
 Successful match, got 8 SMatch=->{%<-, Action: 4, Rv:8

-------------------------------------------------------------------------------
Found a PUSH: to 2 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 2
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   120   122    1     8   1/   1   5/   3 -->>{%<<--

	EndIdx = 122 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=28 for rune rn=->a<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   122   123    1    40   1/   1   5/   4 -->> <<--

	EndIdx = 123 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
--------------------------------------------------------
 ii=28 for rune rn=->a<-
 next state = 19
 match moving to new state, to=19

Top: st:19, ctx.St:19, in macine ns=2
 Successful match, got 39 SMatch=->a<-, Action: 0, Rv:39
if hard test, st=19, hard=false
 (peek) ii=28 for rune rn=->u<-
 ii=28 for rune rn=->u<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->au<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->t<-
 ii=28 for rune rn=->t<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->aut<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->o<-
 ii=28 for rune rn=->o<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->auto<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoe<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->s<-
 ii=28 for rune rn=->s<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoes<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->c<-
 ii=28 for rune rn=->c<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoesc<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->a<-
 ii=28 for rune rn=->a<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoesca<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->p<-
 ii=28 for rune rn=->p<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoescap<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoescape<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=4 for rune rn=-> <-
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=28 for rune rn=->o<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   133   134    1    40   1/   1   5/  15 -->> <<--

	EndIdx = 134 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
--------------------------------------------------------
 ii=28 for rune rn=->o<-
 next state = 19
 match moving to new state, to=19

Top: st:19, ctx.St:19, in macine ns=2
 Successful match, got 39 SMatch=->o<-, Action: 0, Rv:39
if hard test, st=19, hard=false
 (peek) ii=28 for rune rn=->n<-
 ii=28 for rune rn=->n<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->on<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=4 for rune rn=-> <-
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=7 for rune rn=->%<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   136   137    1    40   1/   1   5/  18 -->> <<--

	EndIdx = 137 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
--------------------------------------------------------
 ii=7 for rune rn=->%<-
 next state = 4
 match moving to new state, to=4

Top: st:4, ctx.St:4, in macine ns=2
 Successful match, got 27 SMatch=->%<-, Action: 0, Rv:27
if hard test, st=4, hard=true
 (peek) ii=26 for rune rn=->}<-
 ii=26 for rune rn=->}<-
 next state = 28
 match moving to new state, to=28

Top: st:28, ctx.St:28, in macine ns=2
 Successful match, got 9 SMatch=->%}<-, Action: 8, Rv:9

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=1, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   137   138    1    27   1/   1   5/  19 -->>%<<--
	  1   137   139    1     9   1/   1   5/  20 -->>%}<<--

	EndIdx = 138 -> 0
	EndIdx = 139 -> 1
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
Failed to flush - invalid token set, ii=0, end=137, File: /Users/corwin/Projects/pongo2/lexie/tok/tok.go LineNo:128
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
--------------------------------------------------------
 ii=1 for rune rn=->
<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=->
<-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=24 for rune rn=->{<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   139   140    1    40   1/   1   6/   1 -->>
<<--

	EndIdx = 140 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
--------------------------------------------------------
 ii=24 for rune rn=->{<-
 next state = 21
 match moving to new state, to=21

Top: st:21, ctx.St:21, in macine Popped!
 ii=24 for rune rn=->{<-
 next state = 36
 match moving to new state, to=36

Top: st:36, ctx.St:36, in macine Popped!
 Successful match, got 6 SMatch=->{{<-, Action: 4, Rv:6

-------------------------------------------------------------------------------
Found a PUSH: to 3 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 3
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   140   142    1     6   1/   1   6/   3 -->>{{<<--

	EndIdx = 142 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=3
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=6 for rune rn=->"<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   142   143    1    40   1/   1   6/   4 -->> <<--

	EndIdx = 143 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
--------------------------------------------------------
 ii=6 for rune rn=->"<-
 next state = 3
 match moving to new state, to=3

Top: st:3, ctx.St:3, in macine ns=3
 Successful match, got 40 SMatch=->"<-, Action: 4, Rv:40

-------------------------------------------------------------------------------
Found a PUSH: to 5 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 5
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   143   144    1    40   1/   1   6/   5 -->>"<<--

	EndIdx = 144 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
--------------------------------------------------------
 ii=4 for rune rn=-><<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->c<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->r<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->i<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->p<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->t<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->><-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->a<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->l<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->e<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->r<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->t<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->(<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->'<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->x<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->'<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->)<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->;<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=-><<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->/<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->c<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->r<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->i<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->p<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->t<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->><-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=0 for rune rn=->"<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=5
 Successful match, got 43 SMatch=-><script>alert('xss');</script>"<-, Action:88, Rv:43

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   174   175    1    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--

	EndIdx = 175 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=26 for rune rn=->}<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   175   176    1    40   1/   1   6/   6 -->> <<--

	EndIdx = 176 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
--------------------------------------------------------
 ii=26 for rune rn=->}<-
 next state = 23
 match moving to new state, to=23

Top: st:23, ctx.St:23, in macine Popped!
 ii=26 for rune rn=->}<-
 next state = 38
 match moving to new state, to=38

Top: st:38, ctx.St:38, in macine Popped!
 Successful match, got 7 SMatch=->}}<-, Action: 8, Rv:7

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   176   178    1     7   1/   1   6/   8 -->>}}<<--

	EndIdx = 178 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
--------------------------------------------------------
 ii=1 for rune rn=->
<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=->
<-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=24 for rune rn=->{<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   178   179    1    40   1/   1   7/   1 -->>
<<--

	EndIdx = 179 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
--------------------------------------------------------
 ii=24 for rune rn=->{<-
 next state = 21
 match moving to new state, to=21

Top: st:21, ctx.St:21, in macine Popped!
 ii=7 for rune rn=->%<-
 next state = 35
 match moving to new state, to=35

Top: st:35, ctx.St:35, in macine Popped!
 Successful match, got 8 SMatch=->{%<-, Action: 4, Rv:8

-------------------------------------------------------------------------------
Found a PUSH: to 2 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 2
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   179   181    1     8   1/   1   7/   3 -->>{%<<--

	EndIdx = 181 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=28 for rune rn=->e<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   181   182    1    40   1/   1   7/   4 -->> <<--

	EndIdx = 182 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
--------------------------------------------------------
 ii=28 for rune rn=->e<-
 next state = 19
 match moving to new state, to=19

Top: st:19, ctx.St:19, in macine ns=2
 Successful match, got 39 SMatch=->e<-, Action: 0, Rv:39
if hard test, st=19, hard=false
 (peek) ii=28 for rune rn=->n<-
 ii=28 for rune rn=->n<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->en<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->d<-
 ii=28 for rune rn=->d<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->end<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->a<-
 ii=28 for rune rn=->a<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->enda<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->u<-
 ii=28 for rune rn=->u<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endau<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->t<-
 ii=28 for rune rn=->t<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endaut<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->o<-
 ii=28 for rune rn=->o<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endauto<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoe<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->s<-
 ii=28 for rune rn=->s<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoes<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->c<-
 ii=28 for rune rn=->c<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoesc<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->a<-
 ii=28 for rune rn=->a<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoesca<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->p<-
 ii=28 for rune rn=->p<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoescap<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoescape<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=4 for rune rn=-> <-
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=7 for rune rn=->%<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   195   196    1    40   1/   1   7/  18 -->> <<--

	EndIdx = 196 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
--------------------------------------------------------
 ii=7 for rune rn=->%<-
 next state = 4
 match moving to new state, to=4

Top: st:4, ctx.St:4, in macine ns=2
 Successful match, got 27 SMatch=->%<-, Action: 0, Rv:27
if hard test, st=4, hard=true
 (peek) ii=26 for rune rn=->}<-
 ii=26 for rune rn=->}<-
 next state = 28
 match moving to new state, to=28

Top: st:28, ctx.St:28, in macine ns=2
 Successful match, got 9 SMatch=->%}<-, Action: 8, Rv:9

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=1, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   196   197    1    27   1/   1   7/  19 -->>%<<--
	  1   196   198    1     9   1/   1   7/  20 -->>%}<<--

	EndIdx = 197 -> 0
	EndIdx = 198 -> 1
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
Failed to flush - invalid token set, ii=0, end=196, File: /Users/corwin/Projects/pongo2/lexie/tok/tok.go LineNo:128
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
--------------------------------------------------------
 ii=1 for rune rn=->
<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=->
<-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=24 for rune rn=->{<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   198   199    1    40   1/   1   8/   1 -->>
<<--

	EndIdx = 199 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
--------------------------------------------------------
 ii=24 for rune rn=->{<-
 next state = 21
 match moving to new state, to=21

Top: st:21, ctx.St:21, in macine Popped!
 ii=7 for rune rn=->%<-
 next state = 35
 match moving to new state, to=35

Top: st:35, ctx.St:35, in macine Popped!
 Successful match, got 8 SMatch=->{%<-, Action: 4, Rv:8

-------------------------------------------------------------------------------
Found a PUSH: to 2 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 2
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   199   201    1     8   1/   1   8/   3 -->>{%<<--

	EndIdx = 201 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=28 for rune rn=->a<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   201   202    1    40   1/   1   8/   4 -->> <<--

	EndIdx = 202 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
--------------------------------------------------------
 ii=28 for rune rn=->a<-
 next state = 19
 match moving to new state, to=19

Top: st:19, ctx.St:19, in macine ns=2
 Successful match, got 39 SMatch=->a<-, Action: 0, Rv:39
if hard test, st=19, hard=false
 (peek) ii=28 for rune rn=->u<-
 ii=28 for rune rn=->u<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->au<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->t<-
 ii=28 for rune rn=->t<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->aut<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->o<-
 ii=28 for rune rn=->o<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->auto<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoe<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->s<-
 ii=28 for rune rn=->s<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoes<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->c<-
 ii=28 for rune rn=->c<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoesc<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->a<-
 ii=28 for rune rn=->a<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoesca<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->p<-
 ii=28 for rune rn=->p<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoescap<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->autoescape<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=4 for rune rn=-> <-
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=28 for rune rn=->o<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   212   213    1    40   1/   1   8/  15 -->> <<--

	EndIdx = 213 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
--------------------------------------------------------
 ii=28 for rune rn=->o<-
 next state = 19
 match moving to new state, to=19

Top: st:19, ctx.St:19, in macine ns=2
 Successful match, got 39 SMatch=->o<-, Action: 0, Rv:39
if hard test, st=19, hard=false
 (peek) ii=28 for rune rn=->f<-
 ii=28 for rune rn=->f<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->of<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->f<-
 ii=28 for rune rn=->f<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->off<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=4 for rune rn=-> <-
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=7 for rune rn=->%<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   216   217    1    40   1/   1   8/  19 -->> <<--

	EndIdx = 217 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
--------------------------------------------------------
 ii=7 for rune rn=->%<-
 next state = 4
 match moving to new state, to=4

Top: st:4, ctx.St:4, in macine ns=2
 Successful match, got 27 SMatch=->%<-, Action: 0, Rv:27
if hard test, st=4, hard=true
 (peek) ii=26 for rune rn=->}<-
 ii=26 for rune rn=->}<-
 next state = 28
 match moving to new state, to=28

Top: st:28, ctx.St:28, in macine ns=2
 Successful match, got 9 SMatch=->%}<-, Action: 8, Rv:9

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=1, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   217   218    1    27   1/   1   8/  20 -->>%<<--
	  1   217   219    1     9   1/   1   8/  21 -->>%}<<--

	EndIdx = 219 -> 1
	EndIdx = 218 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
Failed to flush - invalid token set, ii=0, end=217, File: /Users/corwin/Projects/pongo2/lexie/tok/tok.go LineNo:128
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
--------------------------------------------------------
 ii=1 for rune rn=->
<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=->
<-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=24 for rune rn=->{<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   219   220    1    40   1/   1   9/   1 -->>
<<--

	EndIdx = 220 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
--------------------------------------------------------
 ii=24 for rune rn=->{<-
 next state = 21
 match moving to new state, to=21

Top: st:21, ctx.St:21, in macine Popped!
 ii=24 for rune rn=->{<-
 next state = 36
 match moving to new state, to=36

Top: st:36, ctx.St:36, in macine Popped!
 Successful match, got 6 SMatch=->{{<-, Action: 4, Rv:6

-------------------------------------------------------------------------------
Found a PUSH: to 3 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 3
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   220   222    1     6   1/   1   9/   3 -->>{{<<--

	EndIdx = 222 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=3
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=6 for rune rn=->"<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   222   223    1    40   1/   1   9/   4 -->> <<--

	EndIdx = 223 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
--------------------------------------------------------
 ii=6 for rune rn=->"<-
 next state = 3
 match moving to new state, to=3

Top: st:3, ctx.St:3, in macine ns=3
 Successful match, got 40 SMatch=->"<-, Action: 4, Rv:40

-------------------------------------------------------------------------------
Found a PUSH: to 5 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 5
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   223   224    1    40   1/   1   9/   5 -->>"<<--

	EndIdx = 224 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
--------------------------------------------------------
 ii=4 for rune rn=-><<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->c<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->r<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->i<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->p<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->t<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->><-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->a<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->l<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->e<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->r<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->t<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->(<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->'<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->x<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->'<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->)<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->;<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=-><<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->/<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->s<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->c<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->r<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->i<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->p<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->t<-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=4 for rune rn=->><-
 next state = 0
 match moving to new state, to=0

Top: st:0, ctx.St:0, in macine ns=5
 ii=0 for rune rn=->"<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=5
 Successful match, got 43 SMatch=-><script>alert('xss');</script>"<-, Action:88, Rv:43

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   254   255    1    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--

	EndIdx = 255 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
--------------------------------------------------------
 ii=25 for rune rn=->|<-
 next state = 22
 match moving to new state, to=22

Top: st:22, ctx.St:22, in macine Popped!
 Successful match, got 24 SMatch=->|<-, Action: 0, Rv:24
if hard test, st=22, hard=true
 (peek) ii=28 for rune rn=->e<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   255   256    1    24   1/   1   9/   6 -->>|<<--

	EndIdx = 256 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
--------------------------------------------------------
 ii=28 for rune rn=->e<-
 next state = 19
 match moving to new state, to=19

Top: st:19, ctx.St:19, in macine Popped!
 Successful match, got 39 SMatch=->e<-, Action: 0, Rv:39
if hard test, st=19, hard=false
 (peek) ii=28 for rune rn=->s<-
 ii=28 for rune rn=->s<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine Popped!
 Successful match, got 39 SMatch=->es<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->c<-
 ii=28 for rune rn=->c<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine Popped!
 Successful match, got 39 SMatch=->esc<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->a<-
 ii=28 for rune rn=->a<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine Popped!
 Successful match, got 39 SMatch=->esca<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->p<-
 ii=28 for rune rn=->p<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine Popped!
 Successful match, got 39 SMatch=->escap<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine Popped!
 Successful match, got 39 SMatch=->escape<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=4 for rune rn=-> <-
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=26 for rune rn=->}<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   262   263    1    40   1/   1   9/  13 -->> <<--

	EndIdx = 263 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
--------------------------------------------------------
 ii=26 for rune rn=->}<-
 next state = 23
 match moving to new state, to=23

Top: st:23, ctx.St:23, in macine Popped!
 ii=26 for rune rn=->}<-
 next state = 38
 match moving to new state, to=38

Top: st:38, ctx.St:38, in macine Popped!
 Successful match, got 7 SMatch=->}}<-, Action: 8, Rv:7

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   263   265    1     7   1/   1   9/  15 -->>}}<<--

	EndIdx = 265 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
--------------------------------------------------------
 ii=1 for rune rn=->
<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=->
<-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=24 for rune rn=->{<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   265   266    1    40   1/   1  10/   1 -->>
<<--

	EndIdx = 266 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
--------------------------------------------------------
 ii=24 for rune rn=->{<-
 next state = 21
 match moving to new state, to=21

Top: st:21, ctx.St:21, in macine Popped!
 ii=7 for rune rn=->%<-
 next state = 35
 match moving to new state, to=35

Top: st:35, ctx.St:35, in macine Popped!
 Successful match, got 8 SMatch=->{%<-, Action: 4, Rv:8

-------------------------------------------------------------------------------
Found a PUSH: to 2 -- This should be subscript of new machine
-------------------------------------------------------------------------------
NextState/ns = 2
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   266   268    1     8   1/   1  10/   3 -->>{%<<--

	EndIdx = 268 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
	 33     8   1/   1  10/   3 -->>{%<<--
--------------------------------------------------------
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=28 for rune rn=->e<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   268   269    1    40   1/   1  10/   4 -->> <<--

	EndIdx = 269 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
	 33     8   1/   1  10/   3 -->>{%<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
	 33     8   1/   1  10/   3 -->>{%<<--
--------------------------------------------------------
 ii=28 for rune rn=->e<-
 next state = 19
 match moving to new state, to=19

Top: st:19, ctx.St:19, in macine ns=2
 Successful match, got 39 SMatch=->e<-, Action: 0, Rv:39
if hard test, st=19, hard=false
 (peek) ii=28 for rune rn=->n<-
 ii=28 for rune rn=->n<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->en<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->d<-
 ii=28 for rune rn=->d<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->end<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->a<-
 ii=28 for rune rn=->a<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->enda<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->u<-
 ii=28 for rune rn=->u<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endau<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->t<-
 ii=28 for rune rn=->t<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endaut<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->o<-
 ii=28 for rune rn=->o<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endauto<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoe<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->s<-
 ii=28 for rune rn=->s<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoes<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->c<-
 ii=28 for rune rn=->c<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoesc<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->a<-
 ii=28 for rune rn=->a<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoesca<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->p<-
 ii=28 for rune rn=->p<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoescap<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=28 for rune rn=->e<-
 ii=28 for rune rn=->e<-
 next state = 34
 match moving to new state, to=34

Top: st:34, ctx.St:34, in macine ns=2
 Successful match, got 39 SMatch=->endautoescape<-, Action: 0, Rv:39
if hard test, st=34, hard=false
 (peek) ii=4 for rune rn=-> <-
 ii=4 for rune rn=-> <-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine ns=2
 Successful match, got 40 SMatch=-> <-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=7 for rune rn=->%<-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   282   283    1    40   1/   1  10/  18 -->> <<--

	EndIdx = 283 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
	 33     8   1/   1  10/   3 -->>{%<<--
	 34    39   1/   1  10/  17 -->>endautoescape<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
	 33     8   1/   1  10/   3 -->>{%<<--
	 34    39   1/   1  10/  17 -->>endautoescape<<--
--------------------------------------------------------
 ii=7 for rune rn=->%<-
 next state = 4
 match moving to new state, to=4

Top: st:4, ctx.St:4, in macine ns=2
 Successful match, got 27 SMatch=->%<-, Action: 0, Rv:27
if hard test, st=4, hard=true
 (peek) ii=26 for rune rn=->}<-
 ii=26 for rune rn=->}<-
 next state = 28
 match moving to new state, to=28

Top: st:28, ctx.St:28, in macine ns=2
 Successful match, got 9 SMatch=->%}<-, Action: 8, Rv:9

-------------------------------------------------------------------------------
Found a POP: State Poping like Corn
-------------------------------------------------------------------------------
Before Flush, xx=1, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   283   284    1    27   1/   1  10/  19 -->>%<<--
	  1   283   285    1     9   1/   1  10/  20 -->>%}<<--

	EndIdx = 284 -> 0
	EndIdx = 285 -> 1
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
	 33     8   1/   1  10/   3 -->>{%<<--
	 34    39   1/   1  10/  17 -->>endautoescape<<--
Failed to flush - invalid token set, ii=0, end=283, File: /Users/corwin/Projects/pongo2/lexie/tok/tok.go LineNo:128
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
	 33     8   1/   1  10/   3 -->>{%<<--
	 34    39   1/   1  10/  17 -->>endautoescape<<--
	 35     9   1/   1  10/  20 -->>%}<<--
--------------------------------------------------------
 ii=1 for rune rn=->
<-
 next state = 1
 match moving to new state, to=1

Top: st:1, ctx.St:1, in macine Popped!
 Successful match, got 40 SMatch=->
<-, Action: 0, Rv:40
if hard test, st=1, hard=true
 (peek) ii=32 for rune rn=-> <-
Before Flush, xx=0, eof = false
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                
	  0   285   286    1    40   1/   1  11/   1 -->>
<<--

	EndIdx = 286 -> 0
TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
	 33     8   1/   1  10/   3 -->>{%<<--
	 34    39   1/   1  10/  17 -->>endautoescape<<--
	 35     9   1/   1  10/  20 -->>%}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
	 33     8   1/   1  10/   3 -->>{%<<--
	 34    39   1/   1  10/  17 -->>endautoescape<<--
	 35     9   1/   1  10/  20 -->>%}<<--
--------------------------------------------------------
 ii=31 for rune rn=-><-
 next state = 26
 match moving to new state, to=26
Fell out of bottom, done == true, need to process last token if...., rn=-><- to=26 St:26
 Reached EOF
Before Flush, xx=0, eof = true
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
	 33     8   1/   1  10/   3 -->>{%<<--
	 34    39   1/   1  10/  17 -->>endautoescape<<--
	 35     9   1/   1  10/  20 -->>%}<<--
After Flush
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
	 33     8   1/   1  10/   3 -->>{%<<--
	 34    39   1/   1  10/  17 -->>endautoescape<<--
	 35     9   1/   1  10/  20 -->>%}<<--
--------------------------------------------------------
TokenList:
	row Start End   Hard TokNo     sL/C     eL/C Match                

TokenBuffer:
	row TokNo     sL/C     eL/C Match               
	  0    38   1/   1   1/   1 -->><<--
	  1     6   1/   1   1/   3 -->>{{<<--
	  2    43   1/   1   1/  36 -->><script>alert('xss');</script>"<<--
	  3     7   1/   1   1/   8 -->>}}<<--
	  4     8   1/   1   2/   3 -->>{%<<--
	  5    39   1/   1   2/  14 -->>autoescape<<--
	  6    39   1/   1   2/  18 -->>off<<--
	  7     9   1/   1   2/  21 -->>%}<<--
	  8     6   1/   1   3/   3 -->>{{<<--
	  9    43   1/   1   3/  36 -->><script>alert('xss');</script>"<<--
	 10     7   1/   1   3/   8 -->>}}<<--
	 11     8   1/   1   4/   3 -->>{%<<--
	 12    39   1/   1   4/  17 -->>endautoescape<<--
	 13     9   1/   1   4/  20 -->>%}<<--
	 14     8   1/   1   5/   3 -->>{%<<--
	 15    39   1/   1   5/  14 -->>autoescape<<--
	 16    39   1/   1   5/  17 -->>on<<--
	 17     9   1/   1   5/  20 -->>%}<<--
	 18     6   1/   1   6/   3 -->>{{<<--
	 19    43   1/   1   6/  36 -->><script>alert('xss');</script>"<<--
	 20     7   1/   1   6/   8 -->>}}<<--
	 21     8   1/   1   7/   3 -->>{%<<--
	 22    39   1/   1   7/  17 -->>endautoescape<<--
	 23     9   1/   1   7/  20 -->>%}<<--
	 24     8   1/   1   8/   3 -->>{%<<--
	 25    39   1/   1   8/  14 -->>autoescape<<--
	 26    39   1/   1   8/  18 -->>off<<--
	 27     9   1/   1   8/  21 -->>%}<<--
	 28     6   1/   1   9/   3 -->>{{<<--
	 29    43   1/   1   9/  36 -->><script>alert('xss');</script>"<<--
	 30    24   1/   1   9/   6 -->>|<<--
	 31    39   1/   1   9/  12 -->>escape<<--
	 32     7   1/   1   9/  15 -->>}}<<--
	 33     8   1/   1  10/   3 -->>{%<<--
	 34    39   1/   1  10/  17 -->>endautoescape<<--
	 35     9   1/   1  10/  20 -->>%}<<--
